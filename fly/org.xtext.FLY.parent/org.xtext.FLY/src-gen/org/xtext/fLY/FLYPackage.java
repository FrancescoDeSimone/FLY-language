/**
 * generated by Xtext 2.15.0
 */
package org.xtext.fLY;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.fLY.FLYFactory
 * @model kind="package"
 * @generated
 */
public interface FLYPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "fLY";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/FLY";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "fLY";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  FLYPackage eINSTANCE = org.xtext.fLY.impl.FLYPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FlyImpl <em>Fly</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FlyImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFly()
   * @generated
   */
  int FLY = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Fly</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.AtomicExpressionImpl <em>Atomic Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.AtomicExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getAtomicExpression()
   * @generated
   */
  int ATOMIC_EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_EXPRESSION__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Atomic Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.SortExpressionImpl <em>Sort Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.SortExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getSortExpression()
   * @generated
   */
  int SORT_EXPRESSION = 3;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_EXPRESSION__TYPE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_EXPRESSION__TARGET = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Taget</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_EXPRESSION__TAGET = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Sort Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SORT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.AssignmentImpl <em>Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.AssignmentImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getAssignment()
   * @generated
   */
  int ASSIGNMENT = 4;

  /**
   * The feature id for the '<em><b>Feature</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__FEATURE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__VALUE = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Feature obj</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT__FEATURE_OBJ = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.PrintExpressionImpl <em>Print Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.PrintExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getPrintExpression()
   * @generated
   */
  int PRINT_EXPRESSION = 5;

  /**
   * The feature id for the '<em><b>Print</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_EXPRESSION__PRINT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Print Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.IfExpressionImpl <em>If Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.IfExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getIfExpression()
   * @generated
   */
  int IF_EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__COND = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__THEN = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__ELSE = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ForExpressionImpl <em>For Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ForExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getForExpression()
   * @generated
   */
  int FOR_EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_EXPRESSION__INDEX = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Object</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_EXPRESSION__OBJECT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_EXPRESSION__BODY = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>For Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.VariableForImpl <em>Variable For</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.VariableForImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableFor()
   * @generated
   */
  int VARIABLE_FOR = 8;

  /**
   * The number of structural features of the '<em>Variable For</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FOR_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.WhileExpressionImpl <em>While Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.WhileExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getWhileExpression()
   * @generated
   */
  int WHILE_EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_EXPRESSION__COND = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_EXPRESSION__BODY = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.BlockExpressionImpl <em>Block Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.BlockExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getBlockExpression()
   * @generated
   */
  int BLOCK_EXPRESSION = 10;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_EXPRESSION__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Block Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.VariableDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__TYPEOBJECT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ObjectImpl <em>Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getObject()
   * @generated
   */
  int OBJECT = 12;

  /**
   * The number of structural features of the '<em>Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.DeclarationObjectImpl <em>Declaration Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.DeclarationObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getDeclarationObject()
   * @generated
   */
  int DECLARATION_OBJECT = 13;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_OBJECT__FEATURES = 0;

  /**
   * The number of structural features of the '<em>Declaration Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_OBJECT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.DeclarationFeatureImpl <em>Declaration Feature</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.DeclarationFeatureImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getDeclarationFeature()
   * @generated
   */
  int DECLARATION_FEATURE = 14;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE__FEATURE = 0;

  /**
   * The feature id for the '<em><b>Value f</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE__VALUE_F = 1;

  /**
   * The feature id for the '<em><b>Value s</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE__VALUE_S = 2;

  /**
   * The feature id for the '<em><b>Value t</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE__VALUE_T = 3;

  /**
   * The feature id for the '<em><b>Value b</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE__VALUE_B = 4;

  /**
   * The number of structural features of the '<em>Declaration Feature</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATION_FEATURE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FeautureNameImpl <em>Feauture Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FeautureNameImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFeautureName()
   * @generated
   */
  int FEAUTURE_NAME = 15;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEAUTURE_NAME__FEATURE = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEAUTURE_NAME__VALUE = 1;

  /**
   * The number of structural features of the '<em>Feauture Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEAUTURE_NAME_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ArithmeticExpressionImpl <em>Arithmetic Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ArithmeticExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getArithmeticExpression()
   * @generated
   */
  int ARITHMETIC_EXPRESSION = 28;

  /**
   * The number of structural features of the '<em>Arithmetic Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ObjectLiteralImpl <em>Object Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ObjectLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getObjectLiteral()
   * @generated
   */
  int OBJECT_LITERAL = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_LITERAL__NAME = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Object Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OBJECT_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.RangeLiteralImpl <em>Range Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.RangeLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getRangeLiteral()
   * @generated
   */
  int RANGE_LITERAL = 17;

  /**
   * The feature id for the '<em><b>Value1</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL__VALUE1 = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL__VALUE2 = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Range Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANGE_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.MathFunctionImpl <em>Math Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.MathFunctionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getMathFunction()
   * @generated
   */
  int MATH_FUNCTION = 18;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_FUNCTION__FEATURE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_FUNCTION__EXPRESSIONS = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Math Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MATH_FUNCTION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.VariableFunctionImpl <em>Variable Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.VariableFunctionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableFunction()
   * @generated
   */
  int VARIABLE_FUNCTION = 19;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FUNCTION__TARGET = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FUNCTION__FEATURE = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FUNCTION__EXPRESSIONS = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Variable Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FUNCTION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FunctionReturnImpl <em>Function Return</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FunctionReturnImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionReturn()
   * @generated
   */
  int FUNCTION_RETURN = 20;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_RETURN__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Function Return</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_RETURN_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FunctionDefinitionImpl <em>Function Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FunctionDefinitionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionDefinition()
   * @generated
   */
  int FUNCTION_DEFINITION = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINITION__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINITION__PARAMETERS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINITION__BODY = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Function Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DEFINITION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ChannelSendImpl <em>Channel Send</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ChannelSendImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelSend()
   * @generated
   */
  int CHANNEL_SEND = 22;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_SEND__TARGET = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_SEND__EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Channel Send</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_SEND_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ChannelReceiveImpl <em>Channel Receive</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ChannelReceiveImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelReceive()
   * @generated
   */
  int CHANNEL_RECEIVE = 23;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_RECEIVE__TARGET = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Channel Receive</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_RECEIVE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.LocalFunctionCallImpl <em>Local Function Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.LocalFunctionCallImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getLocalFunctionCall()
   * @generated
   */
  int LOCAL_FUNCTION_CALL = 24;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FUNCTION_CALL__TARGET = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Input</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FUNCTION_CALL__INPUT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Local Function Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.LocalFunctionInputImpl <em>Local Function Input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.LocalFunctionInputImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getLocalFunctionInput()
   * @generated
   */
  int LOCAL_FUNCTION_INPUT = 25;

  /**
   * The feature id for the '<em><b>Inputs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FUNCTION_INPUT__INPUTS = 0;

  /**
   * The number of structural features of the '<em>Local Function Input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FUNCTION_INPUT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FlyFunctionCallImpl <em>Fly Function Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FlyFunctionCallImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFlyFunctionCall()
   * @generated
   */
  int FLY_FUNCTION_CALL = 26;

  /**
   * The feature id for the '<em><b>Is Async</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__IS_ASYNC = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__TARGET = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Input</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__INPUT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Environment</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__ENVIRONMENT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Is then</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__IS_THEN = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Then</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__THEN = EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Is thenall</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__IS_THENALL = EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Thenall</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL__THENALL = EXPRESSION_FEATURE_COUNT + 7;

  /**
   * The number of structural features of the '<em>Fly Function Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLY_FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 8;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FunctionInputImpl <em>Function Input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FunctionInputImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionInput()
   * @generated
   */
  int FUNCTION_INPUT = 27;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INPUT__EXPRESSIONS = 0;

  /**
   * The feature id for the '<em><b>Is for index</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INPUT__IS_FOR_INDEX = 1;

  /**
   * The feature id for the '<em><b>Findex</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INPUT__FINDEX = 2;

  /**
   * The number of structural features of the '<em>Function Input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_INPUT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.DatDeclarationImpl <em>Dat Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.DatDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getDatDeclaration()
   * @generated
   */
  int DAT_DECLARATION = 29;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The number of structural features of the '<em>Dat Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.RandomDeclarationImpl <em>Random Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.RandomDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getRandomDeclaration()
   * @generated
   */
  int RANDOM_DECLARATION = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The number of structural features of the '<em>Random Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RANDOM_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.EnvironmentDeclarationImpl <em>Environment Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.EnvironmentDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getEnvironmentDeclaration()
   * @generated
   */
  int ENVIRONMENT_DECLARATION = 31;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENVIRONMENT_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENVIRONMENT_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENVIRONMENT_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The number of structural features of the '<em>Environment Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENVIRONMENT_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.BinDeclarationImpl <em>Bin Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.BinDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getBinDeclaration()
   * @generated
   */
  int BIN_DECLARATION = 32;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BIN_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BIN_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BIN_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The number of structural features of the '<em>Bin Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BIN_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.OptimizerDeclarationImpl <em>Optimizer Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.OptimizerDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getOptimizerDeclaration()
   * @generated
   */
  int OPTIMIZER_DECLARATION = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The number of structural features of the '<em>Optimizer Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPTIMIZER_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ChannelDeclarationImpl <em>Channel Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ChannelDeclarationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelDeclaration()
   * @generated
   */
  int CHANNEL_DECLARATION = 34;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_DECLARATION__NAME = VARIABLE_DECLARATION__NAME;

  /**
   * The feature id for the '<em><b>Typeobject</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_DECLARATION__TYPEOBJECT = VARIABLE_DECLARATION__TYPEOBJECT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_DECLARATION__RIGHT = VARIABLE_DECLARATION__RIGHT;

  /**
   * The feature id for the '<em><b>Environment</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_DECLARATION__ENVIRONMENT = VARIABLE_DECLARATION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Channel Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHANNEL_DECLARATION_FEATURE_COUNT = VARIABLE_DECLARATION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.NameObjectDefImpl <em>Name Object Def</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.NameObjectDefImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getNameObjectDef()
   * @generated
   */
  int NAME_OBJECT_DEF = 35;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_OBJECT_DEF__FEATURES = OBJECT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Name Object Def</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_OBJECT_DEF_FEATURE_COUNT = OBJECT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.NameObjectImpl <em>Name Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.NameObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getNameObject()
   * @generated
   */
  int NAME_OBJECT = 36;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_OBJECT__NAME = OBJECT_LITERAL__NAME;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_OBJECT__VALUE = OBJECT_LITERAL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Name Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_OBJECT_FEATURE_COUNT = OBJECT_LITERAL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.IndexObjectImpl <em>Index Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.IndexObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getIndexObject()
   * @generated
   */
  int INDEX_OBJECT = 37;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_OBJECT__NAME = OBJECT_LITERAL__NAME;

  /**
   * The feature id for the '<em><b>Valuet</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_OBJECT__VALUET = OBJECT_LITERAL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_OBJECT__VALUE = OBJECT_LITERAL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Index Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INDEX_OBJECT_FEATURE_COUNT = OBJECT_LITERAL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.DatSingleObjectImpl <em>Dat Single Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.DatSingleObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getDatSingleObject()
   * @generated
   */
  int DAT_SINGLE_OBJECT = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_SINGLE_OBJECT__NAME = OBJECT_LITERAL__NAME;

  /**
   * The feature id for the '<em><b>Value1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_SINGLE_OBJECT__VALUE1 = OBJECT_LITERAL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_SINGLE_OBJECT__VALUE2 = OBJECT_LITERAL_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Dat Single Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_SINGLE_OBJECT_FEATURE_COUNT = OBJECT_LITERAL_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.DatTableObjectImpl <em>Dat Table Object</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.DatTableObjectImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getDatTableObject()
   * @generated
   */
  int DAT_TABLE_OBJECT = 39;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_TABLE_OBJECT__NAME = OBJECT_LITERAL__NAME;

  /**
   * The feature id for the '<em><b>Range1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_TABLE_OBJECT__RANGE1 = OBJECT_LITERAL_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Range1 t</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_TABLE_OBJECT__RANGE1_T = OBJECT_LITERAL_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Range2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_TABLE_OBJECT__RANGE2 = OBJECT_LITERAL_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Dat Table Object</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DAT_TABLE_OBJECT_FEATURE_COUNT = OBJECT_LITERAL_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.BinaryOperationImpl <em>Binary Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.BinaryOperationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getBinaryOperation()
   * @generated
   */
  int BINARY_OPERATION = 40;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__LEFT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__FEATURE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__RIGHT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Binary Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.UnaryOperationImpl <em>Unary Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.UnaryOperationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getUnaryOperation()
   * @generated
   */
  int UNARY_OPERATION = 41;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_OPERATION__FEATURE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_OPERATION__OPERAND = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unary Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_OPERATION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.CastExpressionImpl <em>Cast Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.CastExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getCastExpression()
   * @generated
   */
  int CAST_EXPRESSION = 42;

  /**
   * The feature id for the '<em><b>Target</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAST_EXPRESSION__TARGET = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAST_EXPRESSION__OP = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAST_EXPRESSION__TYPE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Cast Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CAST_EXPRESSION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.PostfixOperationImpl <em>Postfix Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.PostfixOperationImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getPostfixOperation()
   * @generated
   */
  int POSTFIX_OPERATION = 43;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTFIX_OPERATION__OPERAND = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Feature</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTFIX_OPERATION__FEATURE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Postfix Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTFIX_OPERATION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.TimeFunctionImpl <em>Time Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.TimeFunctionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getTimeFunction()
   * @generated
   */
  int TIME_FUNCTION = 44;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_FUNCTION__VALUE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Time Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_FUNCTION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.BooleanLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getBooleanLiteral()
   * @generated
   */
  int BOOLEAN_LITERAL = 45;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL__VALUE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.NumberLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getNumberLiteral()
   * @generated
   */
  int NUMBER_LITERAL = 46;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL__VALUE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.StringLiteralImpl <em>String Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.StringLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getStringLiteral()
   * @generated
   */
  int STRING_LITERAL = 47;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL__VALUE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.FloatLiteralImpl <em>Float Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.FloatLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getFloatLiteral()
   * @generated
   */
  int FLOAT_LITERAL = 48;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_LITERAL__VALUE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Float Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FLOAT_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.VariableLiteralImpl <em>Variable Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.VariableLiteralImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableLiteral()
   * @generated
   */
  int VARIABLE_LITERAL = 49;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_LITERAL__VARIABLE = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_LITERAL_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.fLY.impl.ParenthesizedExpressionImpl <em>Parenthesized Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.fLY.impl.ParenthesizedExpressionImpl
   * @see org.xtext.fLY.impl.FLYPackageImpl#getParenthesizedExpression()
   * @generated
   */
  int PARENTHESIZED_EXPRESSION = 50;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION__EXPRESSION = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Parenthesized Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARENTHESIZED_EXPRESSION_FEATURE_COUNT = ARITHMETIC_EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.xtext.fLY.Fly <em>Fly</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fly</em>'.
   * @see org.xtext.fLY.Fly
   * @generated
   */
  EClass getFly();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.Fly#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.fLY.Fly#getElements()
   * @see #getFly()
   * @generated
   */
  EReference getFly_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.fLY.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.AtomicExpression <em>Atomic Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atomic Expression</em>'.
   * @see org.xtext.fLY.AtomicExpression
   * @generated
   */
  EClass getAtomicExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.AtomicExpression#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expressions</em>'.
   * @see org.xtext.fLY.AtomicExpression#getExpressions()
   * @see #getAtomicExpression()
   * @generated
   */
  EReference getAtomicExpression_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.SortExpression <em>Sort Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sort Expression</em>'.
   * @see org.xtext.fLY.SortExpression
   * @generated
   */
  EClass getSortExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.SortExpression#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.fLY.SortExpression#getType()
   * @see #getSortExpression()
   * @generated
   */
  EAttribute getSortExpression_Type();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.SortExpression#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.SortExpression#getTarget()
   * @see #getSortExpression()
   * @generated
   */
  EReference getSortExpression_Target();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.SortExpression#getTaget <em>Taget</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Taget</em>'.
   * @see org.xtext.fLY.SortExpression#getTaget()
   * @see #getSortExpression()
   * @generated
   */
  EAttribute getSortExpression_Taget();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.Assignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Assignment</em>'.
   * @see org.xtext.fLY.Assignment
   * @generated
   */
  EClass getAssignment();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.Assignment#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Feature</em>'.
   * @see org.xtext.fLY.Assignment#getFeature()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Feature();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.Assignment#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.fLY.Assignment#getOp()
   * @see #getAssignment()
   * @generated
   */
  EAttribute getAssignment_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.Assignment#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.fLY.Assignment#getValue()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Value();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.Assignment#getFeature_obj <em>Feature obj</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Feature obj</em>'.
   * @see org.xtext.fLY.Assignment#getFeature_obj()
   * @see #getAssignment()
   * @generated
   */
  EReference getAssignment_Feature_obj();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.PrintExpression <em>Print Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Expression</em>'.
   * @see org.xtext.fLY.PrintExpression
   * @generated
   */
  EClass getPrintExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.PrintExpression#getPrint <em>Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Print</em>'.
   * @see org.xtext.fLY.PrintExpression#getPrint()
   * @see #getPrintExpression()
   * @generated
   */
  EReference getPrintExpression_Print();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.IfExpression <em>If Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Expression</em>'.
   * @see org.xtext.fLY.IfExpression
   * @generated
   */
  EClass getIfExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.IfExpression#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.fLY.IfExpression#getCond()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.IfExpression#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Then</em>'.
   * @see org.xtext.fLY.IfExpression#getThen()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Then();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.IfExpression#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Else</em>'.
   * @see org.xtext.fLY.IfExpression#getElse()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ForExpression <em>For Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Expression</em>'.
   * @see org.xtext.fLY.ForExpression
   * @generated
   */
  EClass getForExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.ForExpression#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see org.xtext.fLY.ForExpression#getIndex()
   * @see #getForExpression()
   * @generated
   */
  EReference getForExpression_Index();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.ForExpression#getObject <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Object</em>'.
   * @see org.xtext.fLY.ForExpression#getObject()
   * @see #getForExpression()
   * @generated
   */
  EReference getForExpression_Object();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.ForExpression#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.fLY.ForExpression#getBody()
   * @see #getForExpression()
   * @generated
   */
  EReference getForExpression_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.VariableFor <em>Variable For</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable For</em>'.
   * @see org.xtext.fLY.VariableFor
   * @generated
   */
  EClass getVariableFor();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.WhileExpression <em>While Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While Expression</em>'.
   * @see org.xtext.fLY.WhileExpression
   * @generated
   */
  EClass getWhileExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.WhileExpression#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.fLY.WhileExpression#getCond()
   * @see #getWhileExpression()
   * @generated
   */
  EReference getWhileExpression_Cond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.WhileExpression#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.fLY.WhileExpression#getBody()
   * @see #getWhileExpression()
   * @generated
   */
  EReference getWhileExpression_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.BlockExpression <em>Block Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Expression</em>'.
   * @see org.xtext.fLY.BlockExpression
   * @generated
   */
  EClass getBlockExpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.BlockExpression#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.fLY.BlockExpression#getExpressions()
   * @see #getBlockExpression()
   * @generated
   */
  EReference getBlockExpression_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.VariableDeclaration <em>Variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Declaration</em>'.
   * @see org.xtext.fLY.VariableDeclaration
   * @generated
   */
  EClass getVariableDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.VariableDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.fLY.VariableDeclaration#getName()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.VariableDeclaration#getTypeobject <em>Typeobject</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Typeobject</em>'.
   * @see org.xtext.fLY.VariableDeclaration#getTypeobject()
   * @see #getVariableDeclaration()
   * @generated
   */
  EAttribute getVariableDeclaration_Typeobject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.VariableDeclaration#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.fLY.VariableDeclaration#getRight()
   * @see #getVariableDeclaration()
   * @generated
   */
  EReference getVariableDeclaration_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.Object <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object</em>'.
   * @see org.xtext.fLY.Object
   * @generated
   */
  EClass getObject();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.DeclarationObject <em>Declaration Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declaration Object</em>'.
   * @see org.xtext.fLY.DeclarationObject
   * @generated
   */
  EClass getDeclarationObject();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.DeclarationObject#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Features</em>'.
   * @see org.xtext.fLY.DeclarationObject#getFeatures()
   * @see #getDeclarationObject()
   * @generated
   */
  EReference getDeclarationObject_Features();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.DeclarationFeature <em>Declaration Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declaration Feature</em>'.
   * @see org.xtext.fLY.DeclarationFeature
   * @generated
   */
  EClass getDeclarationFeature();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.DeclarationFeature#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.DeclarationFeature#getFeature()
   * @see #getDeclarationFeature()
   * @generated
   */
  EAttribute getDeclarationFeature_Feature();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.DeclarationFeature#getValue_f <em>Value f</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value f</em>'.
   * @see org.xtext.fLY.DeclarationFeature#getValue_f()
   * @see #getDeclarationFeature()
   * @generated
   */
  EAttribute getDeclarationFeature_Value_f();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.DeclarationFeature#getValue_s <em>Value s</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value s</em>'.
   * @see org.xtext.fLY.DeclarationFeature#getValue_s()
   * @see #getDeclarationFeature()
   * @generated
   */
  EAttribute getDeclarationFeature_Value_s();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.DeclarationFeature#getValue_t <em>Value t</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value t</em>'.
   * @see org.xtext.fLY.DeclarationFeature#getValue_t()
   * @see #getDeclarationFeature()
   * @generated
   */
  EAttribute getDeclarationFeature_Value_t();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DeclarationFeature#getValue_b <em>Value b</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value b</em>'.
   * @see org.xtext.fLY.DeclarationFeature#getValue_b()
   * @see #getDeclarationFeature()
   * @generated
   */
  EReference getDeclarationFeature_Value_b();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FeautureName <em>Feauture Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Feauture Name</em>'.
   * @see org.xtext.fLY.FeautureName
   * @generated
   */
  EClass getFeautureName();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FeautureName#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.FeautureName#getFeature()
   * @see #getFeautureName()
   * @generated
   */
  EAttribute getFeautureName_Feature();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.FeautureName#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.fLY.FeautureName#getValue()
   * @see #getFeautureName()
   * @generated
   */
  EReference getFeautureName_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ObjectLiteral <em>Object Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Object Literal</em>'.
   * @see org.xtext.fLY.ObjectLiteral
   * @generated
   */
  EClass getObjectLiteral();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.ObjectLiteral#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see org.xtext.fLY.ObjectLiteral#getName()
   * @see #getObjectLiteral()
   * @generated
   */
  EReference getObjectLiteral_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.RangeLiteral <em>Range Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Range Literal</em>'.
   * @see org.xtext.fLY.RangeLiteral
   * @generated
   */
  EClass getRangeLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.RangeLiteral#getValue1 <em>Value1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value1</em>'.
   * @see org.xtext.fLY.RangeLiteral#getValue1()
   * @see #getRangeLiteral()
   * @generated
   */
  EAttribute getRangeLiteral_Value1();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.RangeLiteral#getValue2 <em>Value2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value2</em>'.
   * @see org.xtext.fLY.RangeLiteral#getValue2()
   * @see #getRangeLiteral()
   * @generated
   */
  EAttribute getRangeLiteral_Value2();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.MathFunction <em>Math Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Math Function</em>'.
   * @see org.xtext.fLY.MathFunction
   * @generated
   */
  EClass getMathFunction();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.MathFunction#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.MathFunction#getFeature()
   * @see #getMathFunction()
   * @generated
   */
  EAttribute getMathFunction_Feature();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.MathFunction#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.fLY.MathFunction#getExpressions()
   * @see #getMathFunction()
   * @generated
   */
  EReference getMathFunction_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.VariableFunction <em>Variable Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Function</em>'.
   * @see org.xtext.fLY.VariableFunction
   * @generated
   */
  EClass getVariableFunction();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.VariableFunction#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.VariableFunction#getTarget()
   * @see #getVariableFunction()
   * @generated
   */
  EReference getVariableFunction_Target();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.VariableFunction#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.VariableFunction#getFeature()
   * @see #getVariableFunction()
   * @generated
   */
  EAttribute getVariableFunction_Feature();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.VariableFunction#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.fLY.VariableFunction#getExpressions()
   * @see #getVariableFunction()
   * @generated
   */
  EReference getVariableFunction_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FunctionReturn <em>Function Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Return</em>'.
   * @see org.xtext.fLY.FunctionReturn
   * @generated
   */
  EClass getFunctionReturn();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.FunctionReturn#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.fLY.FunctionReturn#getExpression()
   * @see #getFunctionReturn()
   * @generated
   */
  EReference getFunctionReturn_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FunctionDefinition <em>Function Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Definition</em>'.
   * @see org.xtext.fLY.FunctionDefinition
   * @generated
   */
  EClass getFunctionDefinition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FunctionDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.fLY.FunctionDefinition#getName()
   * @see #getFunctionDefinition()
   * @generated
   */
  EAttribute getFunctionDefinition_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.FunctionDefinition#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see org.xtext.fLY.FunctionDefinition#getParameters()
   * @see #getFunctionDefinition()
   * @generated
   */
  EReference getFunctionDefinition_Parameters();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.FunctionDefinition#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see org.xtext.fLY.FunctionDefinition#getBody()
   * @see #getFunctionDefinition()
   * @generated
   */
  EReference getFunctionDefinition_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ChannelSend <em>Channel Send</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Channel Send</em>'.
   * @see org.xtext.fLY.ChannelSend
   * @generated
   */
  EClass getChannelSend();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.ChannelSend#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.ChannelSend#getTarget()
   * @see #getChannelSend()
   * @generated
   */
  EReference getChannelSend_Target();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.ChannelSend#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.fLY.ChannelSend#getExpression()
   * @see #getChannelSend()
   * @generated
   */
  EReference getChannelSend_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ChannelReceive <em>Channel Receive</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Channel Receive</em>'.
   * @see org.xtext.fLY.ChannelReceive
   * @generated
   */
  EClass getChannelReceive();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.ChannelReceive#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.ChannelReceive#getTarget()
   * @see #getChannelReceive()
   * @generated
   */
  EReference getChannelReceive_Target();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.LocalFunctionCall <em>Local Function Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local Function Call</em>'.
   * @see org.xtext.fLY.LocalFunctionCall
   * @generated
   */
  EClass getLocalFunctionCall();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.LocalFunctionCall#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.LocalFunctionCall#getTarget()
   * @see #getLocalFunctionCall()
   * @generated
   */
  EReference getLocalFunctionCall_Target();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.LocalFunctionCall#getInput <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Input</em>'.
   * @see org.xtext.fLY.LocalFunctionCall#getInput()
   * @see #getLocalFunctionCall()
   * @generated
   */
  EReference getLocalFunctionCall_Input();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.LocalFunctionInput <em>Local Function Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local Function Input</em>'.
   * @see org.xtext.fLY.LocalFunctionInput
   * @generated
   */
  EClass getLocalFunctionInput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.LocalFunctionInput#getInputs <em>Inputs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Inputs</em>'.
   * @see org.xtext.fLY.LocalFunctionInput#getInputs()
   * @see #getLocalFunctionInput()
   * @generated
   */
  EReference getLocalFunctionInput_Inputs();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FlyFunctionCall <em>Fly Function Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fly Function Call</em>'.
   * @see org.xtext.fLY.FlyFunctionCall
   * @generated
   */
  EClass getFlyFunctionCall();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FlyFunctionCall#isIsAsync <em>Is Async</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Async</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#isIsAsync()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EAttribute getFlyFunctionCall_IsAsync();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.FlyFunctionCall#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#getTarget()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EReference getFlyFunctionCall_Target();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.FlyFunctionCall#getInput <em>Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Input</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#getInput()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EReference getFlyFunctionCall_Input();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.FlyFunctionCall#getEnvironment <em>Environment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Environment</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#getEnvironment()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EReference getFlyFunctionCall_Environment();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FlyFunctionCall#isIs_then <em>Is then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is then</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#isIs_then()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EAttribute getFlyFunctionCall_Is_then();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.FlyFunctionCall#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Then</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#getThen()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EReference getFlyFunctionCall_Then();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FlyFunctionCall#isIs_thenall <em>Is thenall</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is thenall</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#isIs_thenall()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EAttribute getFlyFunctionCall_Is_thenall();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.FlyFunctionCall#getThenall <em>Thenall</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Thenall</em>'.
   * @see org.xtext.fLY.FlyFunctionCall#getThenall()
   * @see #getFlyFunctionCall()
   * @generated
   */
  EReference getFlyFunctionCall_Thenall();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FunctionInput <em>Function Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Input</em>'.
   * @see org.xtext.fLY.FunctionInput
   * @generated
   */
  EClass getFunctionInput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.FunctionInput#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.fLY.FunctionInput#getExpressions()
   * @see #getFunctionInput()
   * @generated
   */
  EReference getFunctionInput_Expressions();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FunctionInput#isIs_for_index <em>Is for index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is for index</em>'.
   * @see org.xtext.fLY.FunctionInput#isIs_for_index()
   * @see #getFunctionInput()
   * @generated
   */
  EAttribute getFunctionInput_Is_for_index();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.FunctionInput#getF_index <em>Findex</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Findex</em>'.
   * @see org.xtext.fLY.FunctionInput#getF_index()
   * @see #getFunctionInput()
   * @generated
   */
  EReference getFunctionInput_F_index();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ArithmeticExpression <em>Arithmetic Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Expression</em>'.
   * @see org.xtext.fLY.ArithmeticExpression
   * @generated
   */
  EClass getArithmeticExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.DatDeclaration <em>Dat Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dat Declaration</em>'.
   * @see org.xtext.fLY.DatDeclaration
   * @generated
   */
  EClass getDatDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.RandomDeclaration <em>Random Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Random Declaration</em>'.
   * @see org.xtext.fLY.RandomDeclaration
   * @generated
   */
  EClass getRandomDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.EnvironmentDeclaration <em>Environment Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Environment Declaration</em>'.
   * @see org.xtext.fLY.EnvironmentDeclaration
   * @generated
   */
  EClass getEnvironmentDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.BinDeclaration <em>Bin Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Bin Declaration</em>'.
   * @see org.xtext.fLY.BinDeclaration
   * @generated
   */
  EClass getBinDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.OptimizerDeclaration <em>Optimizer Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Optimizer Declaration</em>'.
   * @see org.xtext.fLY.OptimizerDeclaration
   * @generated
   */
  EClass getOptimizerDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ChannelDeclaration <em>Channel Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Channel Declaration</em>'.
   * @see org.xtext.fLY.ChannelDeclaration
   * @generated
   */
  EClass getChannelDeclaration();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.ChannelDeclaration#getEnvironment <em>Environment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Environment</em>'.
   * @see org.xtext.fLY.ChannelDeclaration#getEnvironment()
   * @see #getChannelDeclaration()
   * @generated
   */
  EReference getChannelDeclaration_Environment();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.NameObjectDef <em>Name Object Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Name Object Def</em>'.
   * @see org.xtext.fLY.NameObjectDef
   * @generated
   */
  EClass getNameObjectDef();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.fLY.NameObjectDef#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Features</em>'.
   * @see org.xtext.fLY.NameObjectDef#getFeatures()
   * @see #getNameObjectDef()
   * @generated
   */
  EReference getNameObjectDef_Features();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.NameObject <em>Name Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Name Object</em>'.
   * @see org.xtext.fLY.NameObject
   * @generated
   */
  EClass getNameObject();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.NameObject#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.fLY.NameObject#getValue()
   * @see #getNameObject()
   * @generated
   */
  EAttribute getNameObject_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.IndexObject <em>Index Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Index Object</em>'.
   * @see org.xtext.fLY.IndexObject
   * @generated
   */
  EClass getIndexObject();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.IndexObject#getValuet <em>Valuet</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Valuet</em>'.
   * @see org.xtext.fLY.IndexObject#getValuet()
   * @see #getIndexObject()
   * @generated
   */
  EAttribute getIndexObject_Valuet();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.IndexObject#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see org.xtext.fLY.IndexObject#getValue()
   * @see #getIndexObject()
   * @generated
   */
  EReference getIndexObject_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.DatSingleObject <em>Dat Single Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dat Single Object</em>'.
   * @see org.xtext.fLY.DatSingleObject
   * @generated
   */
  EClass getDatSingleObject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DatSingleObject#getValue1 <em>Value1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value1</em>'.
   * @see org.xtext.fLY.DatSingleObject#getValue1()
   * @see #getDatSingleObject()
   * @generated
   */
  EReference getDatSingleObject_Value1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DatSingleObject#getValue2 <em>Value2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value2</em>'.
   * @see org.xtext.fLY.DatSingleObject#getValue2()
   * @see #getDatSingleObject()
   * @generated
   */
  EReference getDatSingleObject_Value2();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.DatTableObject <em>Dat Table Object</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dat Table Object</em>'.
   * @see org.xtext.fLY.DatTableObject
   * @generated
   */
  EClass getDatTableObject();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DatTableObject#getRange1 <em>Range1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Range1</em>'.
   * @see org.xtext.fLY.DatTableObject#getRange1()
   * @see #getDatTableObject()
   * @generated
   */
  EReference getDatTableObject_Range1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DatTableObject#getRange1_t <em>Range1 t</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Range1 t</em>'.
   * @see org.xtext.fLY.DatTableObject#getRange1_t()
   * @see #getDatTableObject()
   * @generated
   */
  EReference getDatTableObject_Range1_t();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.DatTableObject#getRange2 <em>Range2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Range2</em>'.
   * @see org.xtext.fLY.DatTableObject#getRange2()
   * @see #getDatTableObject()
   * @generated
   */
  EReference getDatTableObject_Range2();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.BinaryOperation <em>Binary Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binary Operation</em>'.
   * @see org.xtext.fLY.BinaryOperation
   * @generated
   */
  EClass getBinaryOperation();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.BinaryOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.fLY.BinaryOperation#getLeft()
   * @see #getBinaryOperation()
   * @generated
   */
  EReference getBinaryOperation_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.BinaryOperation#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.BinaryOperation#getFeature()
   * @see #getBinaryOperation()
   * @generated
   */
  EAttribute getBinaryOperation_Feature();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.BinaryOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.fLY.BinaryOperation#getRight()
   * @see #getBinaryOperation()
   * @generated
   */
  EReference getBinaryOperation_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.UnaryOperation <em>Unary Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Operation</em>'.
   * @see org.xtext.fLY.UnaryOperation
   * @generated
   */
  EClass getUnaryOperation();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.UnaryOperation#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.UnaryOperation#getFeature()
   * @see #getUnaryOperation()
   * @generated
   */
  EAttribute getUnaryOperation_Feature();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.UnaryOperation#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.xtext.fLY.UnaryOperation#getOperand()
   * @see #getUnaryOperation()
   * @generated
   */
  EReference getUnaryOperation_Operand();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.CastExpression <em>Cast Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cast Expression</em>'.
   * @see org.xtext.fLY.CastExpression
   * @generated
   */
  EClass getCastExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.CastExpression#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Target</em>'.
   * @see org.xtext.fLY.CastExpression#getTarget()
   * @see #getCastExpression()
   * @generated
   */
  EReference getCastExpression_Target();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.CastExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.fLY.CastExpression#getOp()
   * @see #getCastExpression()
   * @generated
   */
  EAttribute getCastExpression_Op();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.CastExpression#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.fLY.CastExpression#getType()
   * @see #getCastExpression()
   * @generated
   */
  EAttribute getCastExpression_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.PostfixOperation <em>Postfix Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Postfix Operation</em>'.
   * @see org.xtext.fLY.PostfixOperation
   * @generated
   */
  EClass getPostfixOperation();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.PostfixOperation#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.xtext.fLY.PostfixOperation#getOperand()
   * @see #getPostfixOperation()
   * @generated
   */
  EReference getPostfixOperation_Operand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.PostfixOperation#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Feature</em>'.
   * @see org.xtext.fLY.PostfixOperation#getFeature()
   * @see #getPostfixOperation()
   * @generated
   */
  EAttribute getPostfixOperation_Feature();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.TimeFunction <em>Time Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time Function</em>'.
   * @see org.xtext.fLY.TimeFunction
   * @generated
   */
  EClass getTimeFunction();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.TimeFunction#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see org.xtext.fLY.TimeFunction#getValue()
   * @see #getTimeFunction()
   * @generated
   */
  EReference getTimeFunction_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.BooleanLiteral <em>Boolean Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal</em>'.
   * @see org.xtext.fLY.BooleanLiteral
   * @generated
   */
  EClass getBooleanLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.BooleanLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.fLY.BooleanLiteral#getValue()
   * @see #getBooleanLiteral()
   * @generated
   */
  EAttribute getBooleanLiteral_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.NumberLiteral <em>Number Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Literal</em>'.
   * @see org.xtext.fLY.NumberLiteral
   * @generated
   */
  EClass getNumberLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.NumberLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.fLY.NumberLiteral#getValue()
   * @see #getNumberLiteral()
   * @generated
   */
  EAttribute getNumberLiteral_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal</em>'.
   * @see org.xtext.fLY.StringLiteral
   * @generated
   */
  EClass getStringLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.StringLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.fLY.StringLiteral#getValue()
   * @see #getStringLiteral()
   * @generated
   */
  EAttribute getStringLiteral_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.FloatLiteral <em>Float Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Float Literal</em>'.
   * @see org.xtext.fLY.FloatLiteral
   * @generated
   */
  EClass getFloatLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.fLY.FloatLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.fLY.FloatLiteral#getValue()
   * @see #getFloatLiteral()
   * @generated
   */
  EAttribute getFloatLiteral_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.VariableLiteral <em>Variable Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Literal</em>'.
   * @see org.xtext.fLY.VariableLiteral
   * @generated
   */
  EClass getVariableLiteral();

  /**
   * Returns the meta object for the reference '{@link org.xtext.fLY.VariableLiteral#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see org.xtext.fLY.VariableLiteral#getVariable()
   * @see #getVariableLiteral()
   * @generated
   */
  EReference getVariableLiteral_Variable();

  /**
   * Returns the meta object for class '{@link org.xtext.fLY.ParenthesizedExpression <em>Parenthesized Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parenthesized Expression</em>'.
   * @see org.xtext.fLY.ParenthesizedExpression
   * @generated
   */
  EClass getParenthesizedExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.fLY.ParenthesizedExpression#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.fLY.ParenthesizedExpression#getExpression()
   * @see #getParenthesizedExpression()
   * @generated
   */
  EReference getParenthesizedExpression_Expression();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  FLYFactory getFLYFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FlyImpl <em>Fly</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FlyImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFly()
     * @generated
     */
    EClass FLY = eINSTANCE.getFly();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY__ELEMENTS = eINSTANCE.getFly_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.AtomicExpressionImpl <em>Atomic Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.AtomicExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getAtomicExpression()
     * @generated
     */
    EClass ATOMIC_EXPRESSION = eINSTANCE.getAtomicExpression();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOMIC_EXPRESSION__EXPRESSIONS = eINSTANCE.getAtomicExpression_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.SortExpressionImpl <em>Sort Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.SortExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getSortExpression()
     * @generated
     */
    EClass SORT_EXPRESSION = eINSTANCE.getSortExpression();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SORT_EXPRESSION__TYPE = eINSTANCE.getSortExpression_Type();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SORT_EXPRESSION__TARGET = eINSTANCE.getSortExpression_Target();

    /**
     * The meta object literal for the '<em><b>Taget</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SORT_EXPRESSION__TAGET = eINSTANCE.getSortExpression_Taget();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.AssignmentImpl <em>Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.AssignmentImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getAssignment()
     * @generated
     */
    EClass ASSIGNMENT = eINSTANCE.getAssignment();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__FEATURE = eINSTANCE.getAssignment_Feature();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSIGNMENT__OP = eINSTANCE.getAssignment_Op();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__VALUE = eINSTANCE.getAssignment_Value();

    /**
     * The meta object literal for the '<em><b>Feature obj</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT__FEATURE_OBJ = eINSTANCE.getAssignment_Feature_obj();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.PrintExpressionImpl <em>Print Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.PrintExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getPrintExpression()
     * @generated
     */
    EClass PRINT_EXPRESSION = eINSTANCE.getPrintExpression();

    /**
     * The meta object literal for the '<em><b>Print</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT_EXPRESSION__PRINT = eINSTANCE.getPrintExpression_Print();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.IfExpressionImpl <em>If Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.IfExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getIfExpression()
     * @generated
     */
    EClass IF_EXPRESSION = eINSTANCE.getIfExpression();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__COND = eINSTANCE.getIfExpression_Cond();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__THEN = eINSTANCE.getIfExpression_Then();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__ELSE = eINSTANCE.getIfExpression_Else();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ForExpressionImpl <em>For Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ForExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getForExpression()
     * @generated
     */
    EClass FOR_EXPRESSION = eINSTANCE.getForExpression();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_EXPRESSION__INDEX = eINSTANCE.getForExpression_Index();

    /**
     * The meta object literal for the '<em><b>Object</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_EXPRESSION__OBJECT = eINSTANCE.getForExpression_Object();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_EXPRESSION__BODY = eINSTANCE.getForExpression_Body();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.VariableForImpl <em>Variable For</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.VariableForImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableFor()
     * @generated
     */
    EClass VARIABLE_FOR = eINSTANCE.getVariableFor();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.WhileExpressionImpl <em>While Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.WhileExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getWhileExpression()
     * @generated
     */
    EClass WHILE_EXPRESSION = eINSTANCE.getWhileExpression();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_EXPRESSION__COND = eINSTANCE.getWhileExpression_Cond();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_EXPRESSION__BODY = eINSTANCE.getWhileExpression_Body();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.BlockExpressionImpl <em>Block Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.BlockExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getBlockExpression()
     * @generated
     */
    EClass BLOCK_EXPRESSION = eINSTANCE.getBlockExpression();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_EXPRESSION__EXPRESSIONS = eINSTANCE.getBlockExpression_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.VariableDeclarationImpl <em>Variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.VariableDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getVariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__NAME = eINSTANCE.getVariableDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Typeobject</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION__TYPEOBJECT = eINSTANCE.getVariableDeclaration_Typeobject();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__RIGHT = eINSTANCE.getVariableDeclaration_Right();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ObjectImpl <em>Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getObject()
     * @generated
     */
    EClass OBJECT = eINSTANCE.getObject();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.DeclarationObjectImpl <em>Declaration Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.DeclarationObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getDeclarationObject()
     * @generated
     */
    EClass DECLARATION_OBJECT = eINSTANCE.getDeclarationObject();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_OBJECT__FEATURES = eINSTANCE.getDeclarationObject_Features();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.DeclarationFeatureImpl <em>Declaration Feature</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.DeclarationFeatureImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getDeclarationFeature()
     * @generated
     */
    EClass DECLARATION_FEATURE = eINSTANCE.getDeclarationFeature();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION_FEATURE__FEATURE = eINSTANCE.getDeclarationFeature_Feature();

    /**
     * The meta object literal for the '<em><b>Value f</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION_FEATURE__VALUE_F = eINSTANCE.getDeclarationFeature_Value_f();

    /**
     * The meta object literal for the '<em><b>Value s</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION_FEATURE__VALUE_S = eINSTANCE.getDeclarationFeature_Value_s();

    /**
     * The meta object literal for the '<em><b>Value t</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARATION_FEATURE__VALUE_T = eINSTANCE.getDeclarationFeature_Value_t();

    /**
     * The meta object literal for the '<em><b>Value b</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATION_FEATURE__VALUE_B = eINSTANCE.getDeclarationFeature_Value_b();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FeautureNameImpl <em>Feauture Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FeautureNameImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFeautureName()
     * @generated
     */
    EClass FEAUTURE_NAME = eINSTANCE.getFeautureName();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FEAUTURE_NAME__FEATURE = eINSTANCE.getFeautureName_Feature();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FEAUTURE_NAME__VALUE = eINSTANCE.getFeautureName_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ObjectLiteralImpl <em>Object Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ObjectLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getObjectLiteral()
     * @generated
     */
    EClass OBJECT_LITERAL = eINSTANCE.getObjectLiteral();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OBJECT_LITERAL__NAME = eINSTANCE.getObjectLiteral_Name();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.RangeLiteralImpl <em>Range Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.RangeLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getRangeLiteral()
     * @generated
     */
    EClass RANGE_LITERAL = eINSTANCE.getRangeLiteral();

    /**
     * The meta object literal for the '<em><b>Value1</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANGE_LITERAL__VALUE1 = eINSTANCE.getRangeLiteral_Value1();

    /**
     * The meta object literal for the '<em><b>Value2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RANGE_LITERAL__VALUE2 = eINSTANCE.getRangeLiteral_Value2();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.MathFunctionImpl <em>Math Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.MathFunctionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getMathFunction()
     * @generated
     */
    EClass MATH_FUNCTION = eINSTANCE.getMathFunction();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MATH_FUNCTION__FEATURE = eINSTANCE.getMathFunction_Feature();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MATH_FUNCTION__EXPRESSIONS = eINSTANCE.getMathFunction_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.VariableFunctionImpl <em>Variable Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.VariableFunctionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableFunction()
     * @generated
     */
    EClass VARIABLE_FUNCTION = eINSTANCE.getVariableFunction();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_FUNCTION__TARGET = eINSTANCE.getVariableFunction_Target();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_FUNCTION__FEATURE = eINSTANCE.getVariableFunction_Feature();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_FUNCTION__EXPRESSIONS = eINSTANCE.getVariableFunction_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FunctionReturnImpl <em>Function Return</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FunctionReturnImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionReturn()
     * @generated
     */
    EClass FUNCTION_RETURN = eINSTANCE.getFunctionReturn();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_RETURN__EXPRESSION = eINSTANCE.getFunctionReturn_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FunctionDefinitionImpl <em>Function Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FunctionDefinitionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionDefinition()
     * @generated
     */
    EClass FUNCTION_DEFINITION = eINSTANCE.getFunctionDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_DEFINITION__NAME = eINSTANCE.getFunctionDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DEFINITION__PARAMETERS = eINSTANCE.getFunctionDefinition_Parameters();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DEFINITION__BODY = eINSTANCE.getFunctionDefinition_Body();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ChannelSendImpl <em>Channel Send</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ChannelSendImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelSend()
     * @generated
     */
    EClass CHANNEL_SEND = eINSTANCE.getChannelSend();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHANNEL_SEND__TARGET = eINSTANCE.getChannelSend_Target();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHANNEL_SEND__EXPRESSION = eINSTANCE.getChannelSend_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ChannelReceiveImpl <em>Channel Receive</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ChannelReceiveImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelReceive()
     * @generated
     */
    EClass CHANNEL_RECEIVE = eINSTANCE.getChannelReceive();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHANNEL_RECEIVE__TARGET = eINSTANCE.getChannelReceive_Target();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.LocalFunctionCallImpl <em>Local Function Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.LocalFunctionCallImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getLocalFunctionCall()
     * @generated
     */
    EClass LOCAL_FUNCTION_CALL = eINSTANCE.getLocalFunctionCall();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_FUNCTION_CALL__TARGET = eINSTANCE.getLocalFunctionCall_Target();

    /**
     * The meta object literal for the '<em><b>Input</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_FUNCTION_CALL__INPUT = eINSTANCE.getLocalFunctionCall_Input();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.LocalFunctionInputImpl <em>Local Function Input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.LocalFunctionInputImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getLocalFunctionInput()
     * @generated
     */
    EClass LOCAL_FUNCTION_INPUT = eINSTANCE.getLocalFunctionInput();

    /**
     * The meta object literal for the '<em><b>Inputs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL_FUNCTION_INPUT__INPUTS = eINSTANCE.getLocalFunctionInput_Inputs();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FlyFunctionCallImpl <em>Fly Function Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FlyFunctionCallImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFlyFunctionCall()
     * @generated
     */
    EClass FLY_FUNCTION_CALL = eINSTANCE.getFlyFunctionCall();

    /**
     * The meta object literal for the '<em><b>Is Async</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLY_FUNCTION_CALL__IS_ASYNC = eINSTANCE.getFlyFunctionCall_IsAsync();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY_FUNCTION_CALL__TARGET = eINSTANCE.getFlyFunctionCall_Target();

    /**
     * The meta object literal for the '<em><b>Input</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY_FUNCTION_CALL__INPUT = eINSTANCE.getFlyFunctionCall_Input();

    /**
     * The meta object literal for the '<em><b>Environment</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY_FUNCTION_CALL__ENVIRONMENT = eINSTANCE.getFlyFunctionCall_Environment();

    /**
     * The meta object literal for the '<em><b>Is then</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLY_FUNCTION_CALL__IS_THEN = eINSTANCE.getFlyFunctionCall_Is_then();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY_FUNCTION_CALL__THEN = eINSTANCE.getFlyFunctionCall_Then();

    /**
     * The meta object literal for the '<em><b>Is thenall</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLY_FUNCTION_CALL__IS_THENALL = eINSTANCE.getFlyFunctionCall_Is_thenall();

    /**
     * The meta object literal for the '<em><b>Thenall</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FLY_FUNCTION_CALL__THENALL = eINSTANCE.getFlyFunctionCall_Thenall();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FunctionInputImpl <em>Function Input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FunctionInputImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFunctionInput()
     * @generated
     */
    EClass FUNCTION_INPUT = eINSTANCE.getFunctionInput();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_INPUT__EXPRESSIONS = eINSTANCE.getFunctionInput_Expressions();

    /**
     * The meta object literal for the '<em><b>Is for index</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_INPUT__IS_FOR_INDEX = eINSTANCE.getFunctionInput_Is_for_index();

    /**
     * The meta object literal for the '<em><b>Findex</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_INPUT__FINDEX = eINSTANCE.getFunctionInput_F_index();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ArithmeticExpressionImpl <em>Arithmetic Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ArithmeticExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getArithmeticExpression()
     * @generated
     */
    EClass ARITHMETIC_EXPRESSION = eINSTANCE.getArithmeticExpression();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.DatDeclarationImpl <em>Dat Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.DatDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getDatDeclaration()
     * @generated
     */
    EClass DAT_DECLARATION = eINSTANCE.getDatDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.RandomDeclarationImpl <em>Random Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.RandomDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getRandomDeclaration()
     * @generated
     */
    EClass RANDOM_DECLARATION = eINSTANCE.getRandomDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.EnvironmentDeclarationImpl <em>Environment Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.EnvironmentDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getEnvironmentDeclaration()
     * @generated
     */
    EClass ENVIRONMENT_DECLARATION = eINSTANCE.getEnvironmentDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.BinDeclarationImpl <em>Bin Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.BinDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getBinDeclaration()
     * @generated
     */
    EClass BIN_DECLARATION = eINSTANCE.getBinDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.OptimizerDeclarationImpl <em>Optimizer Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.OptimizerDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getOptimizerDeclaration()
     * @generated
     */
    EClass OPTIMIZER_DECLARATION = eINSTANCE.getOptimizerDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ChannelDeclarationImpl <em>Channel Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ChannelDeclarationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getChannelDeclaration()
     * @generated
     */
    EClass CHANNEL_DECLARATION = eINSTANCE.getChannelDeclaration();

    /**
     * The meta object literal for the '<em><b>Environment</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHANNEL_DECLARATION__ENVIRONMENT = eINSTANCE.getChannelDeclaration_Environment();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.NameObjectDefImpl <em>Name Object Def</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.NameObjectDefImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getNameObjectDef()
     * @generated
     */
    EClass NAME_OBJECT_DEF = eINSTANCE.getNameObjectDef();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAME_OBJECT_DEF__FEATURES = eINSTANCE.getNameObjectDef_Features();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.NameObjectImpl <em>Name Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.NameObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getNameObject()
     * @generated
     */
    EClass NAME_OBJECT = eINSTANCE.getNameObject();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAME_OBJECT__VALUE = eINSTANCE.getNameObject_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.IndexObjectImpl <em>Index Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.IndexObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getIndexObject()
     * @generated
     */
    EClass INDEX_OBJECT = eINSTANCE.getIndexObject();

    /**
     * The meta object literal for the '<em><b>Valuet</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INDEX_OBJECT__VALUET = eINSTANCE.getIndexObject_Valuet();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INDEX_OBJECT__VALUE = eINSTANCE.getIndexObject_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.DatSingleObjectImpl <em>Dat Single Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.DatSingleObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getDatSingleObject()
     * @generated
     */
    EClass DAT_SINGLE_OBJECT = eINSTANCE.getDatSingleObject();

    /**
     * The meta object literal for the '<em><b>Value1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAT_SINGLE_OBJECT__VALUE1 = eINSTANCE.getDatSingleObject_Value1();

    /**
     * The meta object literal for the '<em><b>Value2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAT_SINGLE_OBJECT__VALUE2 = eINSTANCE.getDatSingleObject_Value2();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.DatTableObjectImpl <em>Dat Table Object</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.DatTableObjectImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getDatTableObject()
     * @generated
     */
    EClass DAT_TABLE_OBJECT = eINSTANCE.getDatTableObject();

    /**
     * The meta object literal for the '<em><b>Range1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAT_TABLE_OBJECT__RANGE1 = eINSTANCE.getDatTableObject_Range1();

    /**
     * The meta object literal for the '<em><b>Range1 t</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAT_TABLE_OBJECT__RANGE1_T = eINSTANCE.getDatTableObject_Range1_t();

    /**
     * The meta object literal for the '<em><b>Range2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DAT_TABLE_OBJECT__RANGE2 = eINSTANCE.getDatTableObject_Range2();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.BinaryOperationImpl <em>Binary Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.BinaryOperationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getBinaryOperation()
     * @generated
     */
    EClass BINARY_OPERATION = eINSTANCE.getBinaryOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_OPERATION__LEFT = eINSTANCE.getBinaryOperation_Left();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_OPERATION__FEATURE = eINSTANCE.getBinaryOperation_Feature();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_OPERATION__RIGHT = eINSTANCE.getBinaryOperation_Right();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.UnaryOperationImpl <em>Unary Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.UnaryOperationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getUnaryOperation()
     * @generated
     */
    EClass UNARY_OPERATION = eINSTANCE.getUnaryOperation();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_OPERATION__FEATURE = eINSTANCE.getUnaryOperation_Feature();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_OPERATION__OPERAND = eINSTANCE.getUnaryOperation_Operand();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.CastExpressionImpl <em>Cast Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.CastExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getCastExpression()
     * @generated
     */
    EClass CAST_EXPRESSION = eINSTANCE.getCastExpression();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CAST_EXPRESSION__TARGET = eINSTANCE.getCastExpression_Target();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CAST_EXPRESSION__OP = eINSTANCE.getCastExpression_Op();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CAST_EXPRESSION__TYPE = eINSTANCE.getCastExpression_Type();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.PostfixOperationImpl <em>Postfix Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.PostfixOperationImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getPostfixOperation()
     * @generated
     */
    EClass POSTFIX_OPERATION = eINSTANCE.getPostfixOperation();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POSTFIX_OPERATION__OPERAND = eINSTANCE.getPostfixOperation_Operand();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute POSTFIX_OPERATION__FEATURE = eINSTANCE.getPostfixOperation_Feature();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.TimeFunctionImpl <em>Time Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.TimeFunctionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getTimeFunction()
     * @generated
     */
    EClass TIME_FUNCTION = eINSTANCE.getTimeFunction();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TIME_FUNCTION__VALUE = eINSTANCE.getTimeFunction_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.BooleanLiteralImpl <em>Boolean Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.BooleanLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getBooleanLiteral()
     * @generated
     */
    EClass BOOLEAN_LITERAL = eINSTANCE.getBooleanLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_LITERAL__VALUE = eINSTANCE.getBooleanLiteral_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.NumberLiteralImpl <em>Number Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.NumberLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getNumberLiteral()
     * @generated
     */
    EClass NUMBER_LITERAL = eINSTANCE.getNumberLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_LITERAL__VALUE = eINSTANCE.getNumberLiteral_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.StringLiteralImpl <em>String Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.StringLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getStringLiteral()
     * @generated
     */
    EClass STRING_LITERAL = eINSTANCE.getStringLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_LITERAL__VALUE = eINSTANCE.getStringLiteral_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.FloatLiteralImpl <em>Float Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.FloatLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getFloatLiteral()
     * @generated
     */
    EClass FLOAT_LITERAL = eINSTANCE.getFloatLiteral();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FLOAT_LITERAL__VALUE = eINSTANCE.getFloatLiteral_Value();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.VariableLiteralImpl <em>Variable Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.VariableLiteralImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getVariableLiteral()
     * @generated
     */
    EClass VARIABLE_LITERAL = eINSTANCE.getVariableLiteral();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_LITERAL__VARIABLE = eINSTANCE.getVariableLiteral_Variable();

    /**
     * The meta object literal for the '{@link org.xtext.fLY.impl.ParenthesizedExpressionImpl <em>Parenthesized Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.fLY.impl.ParenthesizedExpressionImpl
     * @see org.xtext.fLY.impl.FLYPackageImpl#getParenthesizedExpression()
     * @generated
     */
    EClass PARENTHESIZED_EXPRESSION = eINSTANCE.getParenthesizedExpression();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARENTHESIZED_EXPRESSION__EXPRESSION = eINSTANCE.getParenthesizedExpression_Expression();

  }

} //FLYPackage
