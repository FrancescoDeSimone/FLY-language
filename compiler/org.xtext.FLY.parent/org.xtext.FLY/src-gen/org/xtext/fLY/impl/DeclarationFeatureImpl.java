/**
 * generated by Xtext 2.16.0
 */
package org.xtext.fLY.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.fLY.ArithmeticExpression;
import org.xtext.fLY.DeclarationFeature;
import org.xtext.fLY.FLYPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Declaration Feature</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.fLY.impl.DeclarationFeatureImpl#getFeature <em>Feature</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DeclarationFeatureImpl#getValue_f <em>Value f</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DeclarationFeatureImpl#getValue_s <em>Value s</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DeclarationFeatureImpl#getValue_t <em>Value t</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DeclarationFeatureImpl#getValue_b <em>Value b</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeclarationFeatureImpl extends MinimalEObjectImpl.Container implements DeclarationFeature
{
  /**
   * The default value of the '{@link #getFeature() <em>Feature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature()
   * @generated
   * @ordered
   */
  protected static final String FEATURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFeature() <em>Feature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature()
   * @generated
   * @ordered
   */
  protected String feature = FEATURE_EDEFAULT;

  /**
   * The default value of the '{@link #getValue_f() <em>Value f</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_f()
   * @generated
   * @ordered
   */
  protected static final String VALUE_F_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue_f() <em>Value f</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_f()
   * @generated
   * @ordered
   */
  protected String value_f = VALUE_F_EDEFAULT;

  /**
   * The default value of the '{@link #getValue_s() <em>Value s</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_s()
   * @generated
   * @ordered
   */
  protected static final String VALUE_S_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue_s() <em>Value s</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_s()
   * @generated
   * @ordered
   */
  protected String value_s = VALUE_S_EDEFAULT;

  /**
   * The default value of the '{@link #getValue_t() <em>Value t</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_t()
   * @generated
   * @ordered
   */
  protected static final int VALUE_T_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getValue_t() <em>Value t</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_t()
   * @generated
   * @ordered
   */
  protected int value_t = VALUE_T_EDEFAULT;

  /**
   * The cached value of the '{@link #getValue_b() <em>Value b</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue_b()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression value_b;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeclarationFeatureImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FLYPackage.Literals.DECLARATION_FEATURE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFeature()
  {
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeature(String newFeature)
  {
    String oldFeature = feature;
    feature = newFeature;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__FEATURE, oldFeature, feature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue_f()
  {
    return value_f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue_f(String newValue_f)
  {
    String oldValue_f = value_f;
    value_f = newValue_f;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__VALUE_F, oldValue_f, value_f));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue_s()
  {
    return value_s;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue_s(String newValue_s)
  {
    String oldValue_s = value_s;
    value_s = newValue_s;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__VALUE_S, oldValue_s, value_s));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue_t()
  {
    return value_t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue_t(int newValue_t)
  {
    int oldValue_t = value_t;
    value_t = newValue_t;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__VALUE_T, oldValue_t, value_t));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression getValue_b()
  {
    return value_b;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue_b(ArithmeticExpression newValue_b, NotificationChain msgs)
  {
    ArithmeticExpression oldValue_b = value_b;
    value_b = newValue_b;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__VALUE_B, oldValue_b, newValue_b);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue_b(ArithmeticExpression newValue_b)
  {
    if (newValue_b != value_b)
    {
      NotificationChain msgs = null;
      if (value_b != null)
        msgs = ((InternalEObject)value_b).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DECLARATION_FEATURE__VALUE_B, null, msgs);
      if (newValue_b != null)
        msgs = ((InternalEObject)newValue_b).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DECLARATION_FEATURE__VALUE_B, null, msgs);
      msgs = basicSetValue_b(newValue_b, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DECLARATION_FEATURE__VALUE_B, newValue_b, newValue_b));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FLYPackage.DECLARATION_FEATURE__VALUE_B:
        return basicSetValue_b(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FLYPackage.DECLARATION_FEATURE__FEATURE:
        return getFeature();
      case FLYPackage.DECLARATION_FEATURE__VALUE_F:
        return getValue_f();
      case FLYPackage.DECLARATION_FEATURE__VALUE_S:
        return getValue_s();
      case FLYPackage.DECLARATION_FEATURE__VALUE_T:
        return getValue_t();
      case FLYPackage.DECLARATION_FEATURE__VALUE_B:
        return getValue_b();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FLYPackage.DECLARATION_FEATURE__FEATURE:
        setFeature((String)newValue);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_F:
        setValue_f((String)newValue);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_S:
        setValue_s((String)newValue);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_T:
        setValue_t((Integer)newValue);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_B:
        setValue_b((ArithmeticExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.DECLARATION_FEATURE__FEATURE:
        setFeature(FEATURE_EDEFAULT);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_F:
        setValue_f(VALUE_F_EDEFAULT);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_S:
        setValue_s(VALUE_S_EDEFAULT);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_T:
        setValue_t(VALUE_T_EDEFAULT);
        return;
      case FLYPackage.DECLARATION_FEATURE__VALUE_B:
        setValue_b((ArithmeticExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.DECLARATION_FEATURE__FEATURE:
        return FEATURE_EDEFAULT == null ? feature != null : !FEATURE_EDEFAULT.equals(feature);
      case FLYPackage.DECLARATION_FEATURE__VALUE_F:
        return VALUE_F_EDEFAULT == null ? value_f != null : !VALUE_F_EDEFAULT.equals(value_f);
      case FLYPackage.DECLARATION_FEATURE__VALUE_S:
        return VALUE_S_EDEFAULT == null ? value_s != null : !VALUE_S_EDEFAULT.equals(value_s);
      case FLYPackage.DECLARATION_FEATURE__VALUE_T:
        return value_t != VALUE_T_EDEFAULT;
      case FLYPackage.DECLARATION_FEATURE__VALUE_B:
        return value_b != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (feature: ");
    result.append(feature);
    result.append(", value_f: ");
    result.append(value_f);
    result.append(", value_s: ");
    result.append(value_s);
    result.append(", value_t: ");
    result.append(value_t);
    result.append(')');
    return result.toString();
  }

} //DeclarationFeatureImpl
