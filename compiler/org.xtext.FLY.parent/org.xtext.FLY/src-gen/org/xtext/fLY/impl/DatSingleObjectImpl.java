/**
 * generated by Xtext 2.16.0
 */
package org.xtext.fLY.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.fLY.ArithmeticExpression;
import org.xtext.fLY.DatDeclaration;
import org.xtext.fLY.DatSingleObject;
import org.xtext.fLY.FLYPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Dat Single Object</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.fLY.impl.DatSingleObjectImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DatSingleObjectImpl#getValue1 <em>Value1</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.DatSingleObjectImpl#getValue2 <em>Value2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DatSingleObjectImpl extends ObjectLiteralImpl implements DatSingleObject
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected DatDeclaration name;

  /**
   * The cached value of the '{@link #getValue1() <em>Value1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue1()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression value1;

  /**
   * The cached value of the '{@link #getValue2() <em>Value2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue2()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression value2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DatSingleObjectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FLYPackage.Literals.DAT_SINGLE_OBJECT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatDeclaration getName()
  {
    if (name != null && name.eIsProxy())
    {
      InternalEObject oldName = (InternalEObject)name;
      name = (DatDeclaration)eResolveProxy(oldName);
      if (name != oldName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FLYPackage.DAT_SINGLE_OBJECT__NAME, oldName, name));
      }
    }
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DatDeclaration basicGetName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(DatDeclaration newName)
  {
    DatDeclaration oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DAT_SINGLE_OBJECT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression getValue1()
  {
    return value1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue1(ArithmeticExpression newValue1, NotificationChain msgs)
  {
    ArithmeticExpression oldValue1 = value1;
    value1 = newValue1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.DAT_SINGLE_OBJECT__VALUE1, oldValue1, newValue1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue1(ArithmeticExpression newValue1)
  {
    if (newValue1 != value1)
    {
      NotificationChain msgs = null;
      if (value1 != null)
        msgs = ((InternalEObject)value1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DAT_SINGLE_OBJECT__VALUE1, null, msgs);
      if (newValue1 != null)
        msgs = ((InternalEObject)newValue1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DAT_SINGLE_OBJECT__VALUE1, null, msgs);
      msgs = basicSetValue1(newValue1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DAT_SINGLE_OBJECT__VALUE1, newValue1, newValue1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression getValue2()
  {
    return value2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue2(ArithmeticExpression newValue2, NotificationChain msgs)
  {
    ArithmeticExpression oldValue2 = value2;
    value2 = newValue2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.DAT_SINGLE_OBJECT__VALUE2, oldValue2, newValue2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue2(ArithmeticExpression newValue2)
  {
    if (newValue2 != value2)
    {
      NotificationChain msgs = null;
      if (value2 != null)
        msgs = ((InternalEObject)value2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DAT_SINGLE_OBJECT__VALUE2, null, msgs);
      if (newValue2 != null)
        msgs = ((InternalEObject)newValue2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.DAT_SINGLE_OBJECT__VALUE2, null, msgs);
      msgs = basicSetValue2(newValue2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.DAT_SINGLE_OBJECT__VALUE2, newValue2, newValue2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE1:
        return basicSetValue1(null, msgs);
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE2:
        return basicSetValue2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FLYPackage.DAT_SINGLE_OBJECT__NAME:
        if (resolve) return getName();
        return basicGetName();
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE1:
        return getValue1();
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE2:
        return getValue2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FLYPackage.DAT_SINGLE_OBJECT__NAME:
        setName((DatDeclaration)newValue);
        return;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE1:
        setValue1((ArithmeticExpression)newValue);
        return;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE2:
        setValue2((ArithmeticExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.DAT_SINGLE_OBJECT__NAME:
        setName((DatDeclaration)null);
        return;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE1:
        setValue1((ArithmeticExpression)null);
        return;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE2:
        setValue2((ArithmeticExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.DAT_SINGLE_OBJECT__NAME:
        return name != null;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE1:
        return value1 != null;
      case FLYPackage.DAT_SINGLE_OBJECT__VALUE2:
        return value2 != null;
    }
    return super.eIsSet(featureID);
  }

} //DatSingleObjectImpl
