/**
 * generated by Xtext 2.16.0
 */
package org.xtext.fLY.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.fLY.ArithmeticExpression;
import org.xtext.fLY.Assignment;
import org.xtext.fLY.FLYPackage;
import org.xtext.fLY.ObjectLiteral;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assignment</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.fLY.impl.AssignmentImpl#getFeature <em>Feature</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.AssignmentImpl#getOp <em>Op</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.AssignmentImpl#getValue <em>Value</em>}</li>
 *   <li>{@link org.xtext.fLY.impl.AssignmentImpl#getFeature_obj <em>Feature obj</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssignmentImpl extends ExpressionImpl implements Assignment
{
  /**
   * The cached value of the '{@link #getFeature() <em>Feature</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression feature;

  /**
   * The default value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected static final String OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOp() <em>Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOp()
   * @generated
   * @ordered
   */
  protected String op = OP_EDEFAULT;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected ArithmeticExpression value;

  /**
   * The cached value of the '{@link #getFeature_obj() <em>Feature obj</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFeature_obj()
   * @generated
   * @ordered
   */
  protected ObjectLiteral feature_obj;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssignmentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FLYPackage.Literals.ASSIGNMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression getFeature()
  {
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFeature(ArithmeticExpression newFeature, NotificationChain msgs)
  {
    ArithmeticExpression oldFeature = feature;
    feature = newFeature;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__FEATURE, oldFeature, newFeature);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeature(ArithmeticExpression newFeature)
  {
    if (newFeature != feature)
    {
      NotificationChain msgs = null;
      if (feature != null)
        msgs = ((InternalEObject)feature).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__FEATURE, null, msgs);
      if (newFeature != null)
        msgs = ((InternalEObject)newFeature).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__FEATURE, null, msgs);
      msgs = basicSetFeature(newFeature, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__FEATURE, newFeature, newFeature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOp()
  {
    return op;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOp(String newOp)
  {
    String oldOp = op;
    op = newOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__OP, oldOp, op));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(ArithmeticExpression newValue, NotificationChain msgs)
  {
    ArithmeticExpression oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(ArithmeticExpression newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ObjectLiteral getFeature_obj()
  {
    return feature_obj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFeature_obj(ObjectLiteral newFeature_obj, NotificationChain msgs)
  {
    ObjectLiteral oldFeature_obj = feature_obj;
    feature_obj = newFeature_obj;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__FEATURE_OBJ, oldFeature_obj, newFeature_obj);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFeature_obj(ObjectLiteral newFeature_obj)
  {
    if (newFeature_obj != feature_obj)
    {
      NotificationChain msgs = null;
      if (feature_obj != null)
        msgs = ((InternalEObject)feature_obj).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__FEATURE_OBJ, null, msgs);
      if (newFeature_obj != null)
        msgs = ((InternalEObject)newFeature_obj).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - FLYPackage.ASSIGNMENT__FEATURE_OBJ, null, msgs);
      msgs = basicSetFeature_obj(newFeature_obj, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FLYPackage.ASSIGNMENT__FEATURE_OBJ, newFeature_obj, newFeature_obj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FLYPackage.ASSIGNMENT__FEATURE:
        return basicSetFeature(null, msgs);
      case FLYPackage.ASSIGNMENT__VALUE:
        return basicSetValue(null, msgs);
      case FLYPackage.ASSIGNMENT__FEATURE_OBJ:
        return basicSetFeature_obj(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FLYPackage.ASSIGNMENT__FEATURE:
        return getFeature();
      case FLYPackage.ASSIGNMENT__OP:
        return getOp();
      case FLYPackage.ASSIGNMENT__VALUE:
        return getValue();
      case FLYPackage.ASSIGNMENT__FEATURE_OBJ:
        return getFeature_obj();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FLYPackage.ASSIGNMENT__FEATURE:
        setFeature((ArithmeticExpression)newValue);
        return;
      case FLYPackage.ASSIGNMENT__OP:
        setOp((String)newValue);
        return;
      case FLYPackage.ASSIGNMENT__VALUE:
        setValue((ArithmeticExpression)newValue);
        return;
      case FLYPackage.ASSIGNMENT__FEATURE_OBJ:
        setFeature_obj((ObjectLiteral)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.ASSIGNMENT__FEATURE:
        setFeature((ArithmeticExpression)null);
        return;
      case FLYPackage.ASSIGNMENT__OP:
        setOp(OP_EDEFAULT);
        return;
      case FLYPackage.ASSIGNMENT__VALUE:
        setValue((ArithmeticExpression)null);
        return;
      case FLYPackage.ASSIGNMENT__FEATURE_OBJ:
        setFeature_obj((ObjectLiteral)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FLYPackage.ASSIGNMENT__FEATURE:
        return feature != null;
      case FLYPackage.ASSIGNMENT__OP:
        return OP_EDEFAULT == null ? op != null : !OP_EDEFAULT.equals(op);
      case FLYPackage.ASSIGNMENT__VALUE:
        return value != null;
      case FLYPackage.ASSIGNMENT__FEATURE_OBJ:
        return feature_obj != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (op: ");
    result.append(op);
    result.append(')');
    return result.toString();
  }

} //AssignmentImpl
