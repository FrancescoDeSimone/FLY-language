/**
 * generated by Xtext 2.16.0
 */
package org.xtext.fLY;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Fly Function Call</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#isIsAsync <em>Is Async</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#getTarget <em>Target</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#getInput <em>Input</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#getEnvironment <em>Environment</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#isIs_then <em>Is then</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#getThen <em>Then</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#isIs_thenall <em>Is thenall</em>}</li>
 *   <li>{@link org.xtext.fLY.FlyFunctionCall#getThenall <em>Thenall</em>}</li>
 * </ul>
 *
 * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall()
 * @model
 * @generated
 */
public interface FlyFunctionCall extends Expression
{
  /**
   * Returns the value of the '<em><b>Is Async</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is Async</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is Async</em>' attribute.
   * @see #setIsAsync(boolean)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_IsAsync()
   * @model
   * @generated
   */
  boolean isIsAsync();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#isIsAsync <em>Is Async</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is Async</em>' attribute.
   * @see #isIsAsync()
   * @generated
   */
  void setIsAsync(boolean value);

  /**
   * Returns the value of the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Target</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Target</em>' reference.
   * @see #setTarget(FunctionDefinition)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Target()
   * @model
   * @generated
   */
  FunctionDefinition getTarget();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#getTarget <em>Target</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Target</em>' reference.
   * @see #getTarget()
   * @generated
   */
  void setTarget(FunctionDefinition value);

  /**
   * Returns the value of the '<em><b>Input</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Input</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Input</em>' containment reference.
   * @see #setInput(FunctionInput)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Input()
   * @model containment="true"
   * @generated
   */
  FunctionInput getInput();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#getInput <em>Input</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Input</em>' containment reference.
   * @see #getInput()
   * @generated
   */
  void setInput(FunctionInput value);

  /**
   * Returns the value of the '<em><b>Environment</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Environment</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Environment</em>' reference.
   * @see #setEnvironment(EnvironmentDeclaration)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Environment()
   * @model
   * @generated
   */
  EnvironmentDeclaration getEnvironment();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#getEnvironment <em>Environment</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Environment</em>' reference.
   * @see #getEnvironment()
   * @generated
   */
  void setEnvironment(EnvironmentDeclaration value);

  /**
   * Returns the value of the '<em><b>Is then</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is then</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is then</em>' attribute.
   * @see #setIs_then(boolean)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Is_then()
   * @model
   * @generated
   */
  boolean isIs_then();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#isIs_then <em>Is then</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is then</em>' attribute.
   * @see #isIs_then()
   * @generated
   */
  void setIs_then(boolean value);

  /**
   * Returns the value of the '<em><b>Then</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Then</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Then</em>' reference.
   * @see #setThen(FunctionDefinition)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Then()
   * @model
   * @generated
   */
  FunctionDefinition getThen();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#getThen <em>Then</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Then</em>' reference.
   * @see #getThen()
   * @generated
   */
  void setThen(FunctionDefinition value);

  /**
   * Returns the value of the '<em><b>Is thenall</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Is thenall</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Is thenall</em>' attribute.
   * @see #setIs_thenall(boolean)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Is_thenall()
   * @model
   * @generated
   */
  boolean isIs_thenall();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#isIs_thenall <em>Is thenall</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Is thenall</em>' attribute.
   * @see #isIs_thenall()
   * @generated
   */
  void setIs_thenall(boolean value);

  /**
   * Returns the value of the '<em><b>Thenall</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Thenall</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Thenall</em>' reference.
   * @see #setThenall(FunctionDefinition)
   * @see org.xtext.fLY.FLYPackage#getFlyFunctionCall_Thenall()
   * @model
   * @generated
   */
  FunctionDefinition getThenall();

  /**
   * Sets the value of the '{@link org.xtext.fLY.FlyFunctionCall#getThenall <em>Thenall</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Thenall</em>' reference.
   * @see #getThenall()
   * @generated
   */
  void setThenall(FunctionDefinition value);

} // FlyFunctionCall
