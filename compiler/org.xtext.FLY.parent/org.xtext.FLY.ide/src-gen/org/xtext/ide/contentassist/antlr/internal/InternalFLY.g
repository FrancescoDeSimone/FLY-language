/*
 * generated by Xtext 2.16.0
 */
grammar InternalFLY;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.FLYGrammarAccess;

}
@parser::members {
	private FLYGrammarAccess grammarAccess;

	public void setGrammarAccess(FLYGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleFly
entryRuleFly
:
{ before(grammarAccess.getFlyRule()); }
	 ruleFly
{ after(grammarAccess.getFlyRule()); } 
	 EOF 
;

// Rule Fly
ruleFly 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlyAccess().getElementsAssignment()); }
		(rule__Fly__ElementsAssignment)*
		{ after(grammarAccess.getFlyAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSortExpression
entryRuleSortExpression
:
{ before(grammarAccess.getSortExpressionRule()); }
	 ruleSortExpression
{ after(grammarAccess.getSortExpressionRule()); } 
	 EOF 
;

// Rule SortExpression
ruleSortExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSortExpressionAccess().getGroup()); }
		(rule__SortExpression__Group__0)
		{ after(grammarAccess.getSortExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
		(rule__Assignment__Alternatives)
		{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAs
entryRuleOpAs
:
{ before(grammarAccess.getOpAsRule()); }
	 ruleOpAs
{ after(grammarAccess.getOpAsRule()); } 
	 EOF 
;

// Rule OpAs
ruleOpAs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAsAccess().getAlternatives()); }
		(rule__OpAs__Alternatives)
		{ after(grammarAccess.getOpAsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrintExpression
entryRulePrintExpression
:
{ before(grammarAccess.getPrintExpressionRule()); }
	 rulePrintExpression
{ after(grammarAccess.getPrintExpressionRule()); } 
	 EOF 
;

// Rule PrintExpression
rulePrintExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrintExpressionAccess().getGroup()); }
		(rule__PrintExpression__Group__0)
		{ after(grammarAccess.getPrintExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForExpression
entryRuleForExpression
:
{ before(grammarAccess.getForExpressionRule()); }
	 ruleForExpression
{ after(grammarAccess.getForExpressionRule()); } 
	 EOF 
;

// Rule ForExpression
ruleForExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForExpressionAccess().getGroup()); }
		(rule__ForExpression__Group__0)
		{ after(grammarAccess.getForExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForDelimeter
entryRuleForDelimeter
:
{ before(grammarAccess.getForDelimeterRule()); }
	 ruleForDelimeter
{ after(grammarAccess.getForDelimeterRule()); } 
	 EOF 
;

// Rule ForDelimeter
ruleForDelimeter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForDelimeterAccess().getAlternatives()); }
		(rule__ForDelimeter__Alternatives)
		{ after(grammarAccess.getForDelimeterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForIndex
entryRuleForIndex
:
{ before(grammarAccess.getForIndexRule()); }
	 ruleForIndex
{ after(grammarAccess.getForIndexRule()); } 
	 EOF 
;

// Rule ForIndex
ruleForIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForIndexAccess().getGroup()); }
		(rule__ForIndex__Group__0)
		{ after(grammarAccess.getForIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableFor
entryRuleVariableFor
:
{ before(grammarAccess.getVariableForRule()); }
	 ruleVariableFor
{ after(grammarAccess.getVariableForRule()); } 
	 EOF 
;

// Rule VariableFor
ruleVariableFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableForAccess().getGroup()); }
		(rule__VariableFor__Group__0)
		{ after(grammarAccess.getVariableForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression
:
{ before(grammarAccess.getWhileExpressionRule()); }
	 ruleWhileExpression
{ after(grammarAccess.getWhileExpressionRule()); } 
	 EOF 
;

// Rule WhileExpression
ruleWhileExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getGroup()); }
		(rule__WhileExpression__Group__0)
		{ after(grammarAccess.getWhileExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
		(rule__BlockExpression__Group__0)
		{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
		(rule__VariableDeclaration__Alternatives)
		{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObject
entryRuleObject
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectAccess().getAlternatives()); }
		(rule__Object__Alternatives)
		{ after(grammarAccess.getObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndex
entryRuleIndex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getAlternatives()); }
		(rule__ArrayValue__Alternatives)
		{ after(grammarAccess.getArrayValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarationObject
entryRuleDeclarationObject
:
{ before(grammarAccess.getDeclarationObjectRule()); }
	 ruleDeclarationObject
{ after(grammarAccess.getDeclarationObjectRule()); } 
	 EOF 
;

// Rule DeclarationObject
ruleDeclarationObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationObjectAccess().getGroup()); }
		(rule__DeclarationObject__Group__0)
		{ after(grammarAccess.getDeclarationObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarationFeature
entryRuleDeclarationFeature
:
{ before(grammarAccess.getDeclarationFeatureRule()); }
	 ruleDeclarationFeature
{ after(grammarAccess.getDeclarationFeatureRule()); } 
	 EOF 
;

// Rule DeclarationFeature
ruleDeclarationFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getGroup()); }
		(rule__DeclarationFeature__Group__0)
		{ after(grammarAccess.getDeclarationFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeautureName
entryRuleFeautureName
:
{ before(grammarAccess.getFeautureNameRule()); }
	 ruleFeautureName
{ after(grammarAccess.getFeautureNameRule()); } 
	 EOF 
;

// Rule FeautureName
ruleFeautureName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeautureNameAccess().getAlternatives()); }
		(rule__FeautureName__Alternatives)
		{ after(grammarAccess.getFeautureNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectLiteral
entryRuleObjectLiteral
:
{ before(grammarAccess.getObjectLiteralRule()); }
	 ruleObjectLiteral
{ after(grammarAccess.getObjectLiteralRule()); } 
	 EOF 
;

// Rule ObjectLiteral
ruleObjectLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getAlternatives()); }
		(rule__ObjectLiteral__Alternatives)
		{ after(grammarAccess.getObjectLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubIndex
entryRuleSubIndex
:
{ before(grammarAccess.getSubIndexRule()); }
	 ruleSubIndex
{ after(grammarAccess.getSubIndexRule()); } 
	 EOF 
;

// Rule SubIndex
ruleSubIndex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubIndexAccess().getGroup()); }
		(rule__SubIndex__Group__0)
		{ after(grammarAccess.getSubIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeLiteral
entryRuleRangeLiteral
:
{ before(grammarAccess.getRangeLiteralRule()); }
	 ruleRangeLiteral
{ after(grammarAccess.getRangeLiteralRule()); } 
	 EOF 
;

// Rule RangeLiteral
ruleRangeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getGroup()); }
		(rule__RangeLiteral__Group__0)
		{ after(grammarAccess.getRangeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathFunction
entryRuleMathFunction
:
{ before(grammarAccess.getMathFunctionRule()); }
	 ruleMathFunction
{ after(grammarAccess.getMathFunctionRule()); } 
	 EOF 
;

// Rule MathFunction
ruleMathFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathFunctionAccess().getGroup()); }
		(rule__MathFunction__Group__0)
		{ after(grammarAccess.getMathFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableFunction
entryRuleVariableFunction
:
{ before(grammarAccess.getVariableFunctionRule()); }
	 ruleVariableFunction
{ after(grammarAccess.getVariableFunctionRule()); } 
	 EOF 
;

// Rule VariableFunction
ruleVariableFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableFunctionAccess().getGroup()); }
		(rule__VariableFunction__Group__0)
		{ after(grammarAccess.getVariableFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionReturn
entryRuleFunctionReturn
:
{ before(grammarAccess.getFunctionReturnRule()); }
	 ruleFunctionReturn
{ after(grammarAccess.getFunctionReturnRule()); } 
	 EOF 
;

// Rule FunctionReturn
ruleFunctionReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionReturnAccess().getGroup()); }
		(rule__FunctionReturn__Group__0)
		{ after(grammarAccess.getFunctionReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
		(rule__FunctionDefinition__Group__0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParams
entryRuleParams
:
{ before(grammarAccess.getParamsRule()); }
	 ruleParams
{ after(grammarAccess.getParamsRule()); } 
	 EOF 
;

// Rule Params
ruleParams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamsAccess().getGroup()); }
		(rule__Params__Group__0)
		{ after(grammarAccess.getParamsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelSend
entryRuleChannelSend
:
{ before(grammarAccess.getChannelSendRule()); }
	 ruleChannelSend
{ after(grammarAccess.getChannelSendRule()); } 
	 EOF 
;

// Rule ChannelSend
ruleChannelSend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelSendAccess().getGroup()); }
		(rule__ChannelSend__Group__0)
		{ after(grammarAccess.getChannelSendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannelReceive
entryRuleChannelReceive
:
{ before(grammarAccess.getChannelReceiveRule()); }
	 ruleChannelReceive
{ after(grammarAccess.getChannelReceiveRule()); } 
	 EOF 
;

// Rule ChannelReceive
ruleChannelReceive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelReceiveAccess().getGroup()); }
		(rule__ChannelReceive__Group__0)
		{ after(grammarAccess.getChannelReceiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalFunctionCall
entryRuleLocalFunctionCall
:
{ before(grammarAccess.getLocalFunctionCallRule()); }
	 ruleLocalFunctionCall
{ after(grammarAccess.getLocalFunctionCallRule()); } 
	 EOF 
;

// Rule LocalFunctionCall
ruleLocalFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalFunctionCallAccess().getGroup()); }
		(rule__LocalFunctionCall__Group__0)
		{ after(grammarAccess.getLocalFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalFunctionInput
entryRuleLocalFunctionInput
:
{ before(grammarAccess.getLocalFunctionInputRule()); }
	 ruleLocalFunctionInput
{ after(grammarAccess.getLocalFunctionInputRule()); } 
	 EOF 
;

// Rule LocalFunctionInput
ruleLocalFunctionInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalFunctionInputAccess().getGroup()); }
		(rule__LocalFunctionInput__Group__0)
		{ after(grammarAccess.getLocalFunctionInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlyFunctionCall
entryRuleFlyFunctionCall
:
{ before(grammarAccess.getFlyFunctionCallRule()); }
	 ruleFlyFunctionCall
{ after(grammarAccess.getFlyFunctionCallRule()); } 
	 EOF 
;

// Rule FlyFunctionCall
ruleFlyFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getGroup()); }
		(rule__FlyFunctionCall__Group__0)
		{ after(grammarAccess.getFlyFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionInput
entryRuleFunctionInput
:
{ before(grammarAccess.getFunctionInputRule()); }
	 ruleFunctionInput
{ after(grammarAccess.getFunctionInputRule()); } 
	 EOF 
;

// Rule FunctionInput
ruleFunctionInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionInputAccess().getAlternatives()); }
		(rule__FunctionInput__Alternatives)
		{ after(grammarAccess.getFunctionInputAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNativeExpression
entryRuleNativeExpression
:
{ before(grammarAccess.getNativeExpressionRule()); }
	 ruleNativeExpression
{ after(grammarAccess.getNativeExpressionRule()); } 
	 EOF 
;

// Rule NativeExpression
ruleNativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNativeExpressionAccess().getGroup()); }
		(rule__NativeExpression__Group__0)
		{ after(grammarAccess.getNativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequireExpression
entryRuleRequireExpression
:
{ before(grammarAccess.getRequireExpressionRule()); }
	 ruleRequireExpression
{ after(grammarAccess.getRequireExpressionRule()); } 
	 EOF 
;

// Rule RequireExpression
ruleRequireExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireExpressionAccess().getGroup()); }
		(rule__RequireExpression__Group__0)
		{ after(grammarAccess.getRequireExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixOperation
entryRulePostfixOperation
:
{ before(grammarAccess.getPostfixOperationRule()); }
	 rulePostfixOperation
{ after(grammarAccess.getPostfixOperationRule()); } 
	 EOF 
;

// Rule PostfixOperation
rulePostfixOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixOperationAccess().getGroup()); }
		(rule__PostfixOperation__Group__0)
		{ after(grammarAccess.getPostfixOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpPostfix
entryRuleOpPostfix
:
{ before(grammarAccess.getOpPostfixRule()); }
	 ruleOpPostfix
{ after(grammarAccess.getOpPostfixRule()); } 
	 EOF 
;

// Rule OpPostfix
ruleOpPostfix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpPostfixAccess().getAlternatives()); }
		(rule__OpPostfix__Alternatives)
		{ after(grammarAccess.getOpPostfixAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression
:
{ before(grammarAccess.getArithmeticExpressionRule()); }
	 ruleArithmeticExpression
{ after(grammarAccess.getArithmeticExpressionRule()); } 
	 EOF 
;

// Rule ArithmeticExpression
ruleArithmeticExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArithmeticExpressionAccess().getOrExpressionParserRuleCall()); }
		ruleOrExpression
		{ after(grammarAccess.getArithmeticExpressionAccess().getOrExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpOr
entryRuleOpOr
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpOrAccess().getOrKeyword()); }
		'or'
		{ after(grammarAccess.getOpOrAccess().getOrKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAnd
entryRuleOpAnd
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAndAccess().getAndKeyword()); }
		'and'
		{ after(grammarAccess.getOpAndAccess().getAndKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpEquality
entryRuleOpEquality
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
		(rule__OpEquality__Alternatives)
		{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpCompare
entryRuleOpCompare
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
		(rule__OpCompare__Alternatives)
		{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpAdd
entryRuleOpAdd
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
		(rule__OpAdd__Alternatives)
		{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpMulti
entryRuleOpMulti
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
		(rule__OpMulti__Alternatives)
		{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
		(rule__UnaryOperation__Alternatives)
		{ after(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpUnary
entryRuleOpUnary
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
		(rule__OpUnary__Alternatives)
		{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastExpression
entryRuleCastExpression
:
{ before(grammarAccess.getCastExpressionRule()); }
	 ruleCastExpression
{ after(grammarAccess.getCastExpressionRule()); } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastExpressionAccess().getGroup()); }
		(rule__CastExpression__Group__0)
		{ after(grammarAccess.getCastExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
		(rule__LiteralExpression__Alternatives)
		{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeFunction
entryRuleTimeFunction
:
{ before(grammarAccess.getTimeFunctionRule()); }
	 ruleTimeFunction
{ after(grammarAccess.getTimeFunctionRule()); } 
	 EOF 
;

// Rule TimeFunction
ruleTimeFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeFunctionAccess().getGroup()); }
		(rule__TimeFunction__Group__0)
		{ after(grammarAccess.getTimeFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
		(rule__BooleanLiteral__Alternatives)
		{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
		(rule__NumberLiteral__Group__0)
		{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
		(rule__StringLiteral__Group__0)
		{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatLiteralAccess().getGroup()); }
		(rule__FloatLiteral__Group__0)
		{ after(grammarAccess.getFloatLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableLiteral
entryRuleVariableLiteral
:
{ before(grammarAccess.getVariableLiteralRule()); }
	 ruleVariableLiteral
{ after(grammarAccess.getVariableLiteralRule()); } 
	 EOF 
;

// Rule VariableLiteral
ruleVariableLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableLiteralAccess().getGroup()); }
		(rule__VariableLiteral__Group__0)
		{ after(grammarAccess.getVariableLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
		(rule__ParenthesizedExpression__Group__0)
		{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_0()); }
		ruleAssignment
		{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBlockExpressionParserRuleCall_1()); }
		ruleBlockExpression
		{ after(grammarAccess.getExpressionAccess().getBlockExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_2()); }
		ruleIfExpression
		{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getForExpressionParserRuleCall_3()); }
		ruleForExpression
		{ after(grammarAccess.getExpressionAccess().getForExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWhileExpressionParserRuleCall_4()); }
		ruleWhileExpression
		{ after(grammarAccess.getExpressionAccess().getWhileExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPrintExpressionParserRuleCall_5()); }
		rulePrintExpression
		{ after(grammarAccess.getExpressionAccess().getPrintExpressionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFunctionDefinitionParserRuleCall_6()); }
		ruleFunctionDefinition
		{ after(grammarAccess.getExpressionAccess().getFunctionDefinitionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFunctionReturnParserRuleCall_7()); }
		ruleFunctionReturn
		{ after(grammarAccess.getExpressionAccess().getFunctionReturnParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFlyFunctionCallParserRuleCall_8()); }
		ruleFlyFunctionCall
		{ after(grammarAccess.getExpressionAccess().getFlyFunctionCallParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getVariableDeclarationParserRuleCall_9()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getExpressionAccess().getVariableDeclarationParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getChannelSendParserRuleCall_10()); }
		ruleChannelSend
		{ after(grammarAccess.getExpressionAccess().getChannelSendParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getChannelReceiveParserRuleCall_11()); }
		ruleChannelReceive
		{ after(grammarAccess.getExpressionAccess().getChannelReceiveParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getLocalFunctionCallParserRuleCall_12()); }
		ruleLocalFunctionCall
		{ after(grammarAccess.getExpressionAccess().getLocalFunctionCallParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSortExpressionParserRuleCall_13()); }
		ruleSortExpression
		{ after(grammarAccess.getExpressionAccess().getSortExpressionParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getVariableFunctionParserRuleCall_14()); }
		ruleVariableFunction
		{ after(grammarAccess.getExpressionAccess().getVariableFunctionParserRuleCall_14()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getPostfixOperationParserRuleCall_15()); }
		rulePostfixOperation
		{ after(grammarAccess.getExpressionAccess().getPostfixOperationParserRuleCall_15()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getRequireExpressionParserRuleCall_16()); }
		ruleRequireExpression
		{ after(grammarAccess.getExpressionAccess().getRequireExpressionParserRuleCall_16()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNativeExpressionParserRuleCall_17()); }
		ruleNativeExpression
		{ after(grammarAccess.getExpressionAccess().getNativeExpressionParserRuleCall_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortExpressionAccess().getTypeAscKeyword_1_0_0()); }
		'asc'
		{ after(grammarAccess.getSortExpressionAccess().getTypeAscKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSortExpressionAccess().getTypeDescKeyword_1_0_1()); }
		'desc'
		{ after(grammarAccess.getSortExpressionAccess().getTypeDescKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_0()); }
		(rule__Assignment__Group_0__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
		(rule__Assignment__Group_1__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpAsAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getOpAsAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpAsAccess().getPlusSignEqualsSignKeyword_1()); }
		'+='
		{ after(grammarAccess.getOpAsAccess().getPlusSignEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDelimeterAccess().getTypeAssignment_0()); }
		(rule__ForDelimeter__TypeAssignment_0)
		{ after(grammarAccess.getForDelimeterAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getForDelimeterAccess().getTypeAssignment_1()); }
		(rule__ForDelimeter__TypeAssignment_1)
		{ after(grammarAccess.getForDelimeterAccess().getTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getForDelimeterAccess().getGroup_2()); }
		(rule__ForDelimeter__Group_2__0)
		{ after(grammarAccess.getForDelimeterAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
		(rule__VariableDeclaration__Group_0__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
		(rule__VariableDeclaration__Group_1__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
		(rule__VariableDeclaration__Group_2__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
		(rule__VariableDeclaration__Group_3__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
		(rule__VariableDeclaration__Group_4__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_5()); }
		(rule__VariableDeclaration__Group_5__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_6()); }
		(rule__VariableDeclaration__Group_6__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup_7()); }
		(rule__VariableDeclaration__Group_7__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_0_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_0()); }
		(rule__VariableDeclaration__RightAssignment_0_2_0_2_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_1()); }
		(rule__VariableDeclaration__RightAssignment_0_2_0_2_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_2()); }
		(rule__VariableDeclaration__RightAssignment_0_2_0_2_2)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_0_2_0_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_2_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_2_2_0_2_0()); }
		(rule__VariableDeclaration__RightAssignment_2_2_0_2_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_2_2_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_2_2_0_2_1()); }
		(rule__VariableDeclaration__RightAssignment_2_2_0_2_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_2_2_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_7_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_7_2_0_2_0()); }
		(rule__VariableDeclaration__RightAssignment_7_2_0_2_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_7_2_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_7_2_0_2_1()); }
		(rule__VariableDeclaration__RightAssignment_7_2_0_2_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_7_2_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getGroup_0()); }
		(rule__Object__Group_0__0)
		{ after(grammarAccess.getObjectAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectAccess().getGroup_1()); }
		(rule__Object__Group_1__0)
		{ after(grammarAccess.getObjectAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjectAccess().getGroup_2()); }
		(rule__Object__Group_2__0)
		{ after(grammarAccess.getObjectAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getGroup_0()); }
		(rule__ArrayValue__Group_0__0)
		{ after(grammarAccess.getArrayValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayValueAccess().getArithmeticExpressionParserRuleCall_1()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getArrayValueAccess().getArithmeticExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_fAssignment_3_0()); }
		(rule__DeclarationFeature__Value_fAssignment_3_0)
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_fAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_sAssignment_3_1()); }
		(rule__DeclarationFeature__Value_sAssignment_3_1)
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_sAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_tAssignment_3_2()); }
		(rule__DeclarationFeature__Value_tAssignment_3_2)
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_tAssignment_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_bAssignment_3_3()); }
		(rule__DeclarationFeature__Value_bAssignment_3_3)
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_bAssignment_3_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeautureNameAccess().getGroup_0()); }
		(rule__FeautureName__Group_0__0)
		{ after(grammarAccess.getFeautureNameAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFeautureNameAccess().getValueAssignment_1()); }
		(rule__FeautureName__ValueAssignment_1)
		{ after(grammarAccess.getFeautureNameAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFeautureNameAccess().getObjectParserRuleCall_2()); }
		ruleObject
		{ after(grammarAccess.getFeautureNameAccess().getObjectParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getGroup_0()); }
		(rule__ObjectLiteral__Group_0__0)
		{ after(grammarAccess.getObjectLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getGroup_1()); }
		(rule__ObjectLiteral__Group_1__0)
		{ after(grammarAccess.getObjectLiteralAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getGroup_2()); }
		(rule__ObjectLiteral__Group_2__0)
		{ after(grammarAccess.getObjectLiteralAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getGroup_3()); }
		(rule__ObjectLiteral__Group_3__0)
		{ after(grammarAccess.getObjectLiteralAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Value1Alternatives_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue1NumberLiteralParserRuleCall_2_3_0_0()); }
		ruleNumberLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getValue1NumberLiteralParserRuleCall_2_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue1StringLiteralParserRuleCall_2_3_0_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getValue1StringLiteralParserRuleCall_2_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Value2Alternatives_2_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue2NumberLiteralParserRuleCall_2_5_0_0()); }
		ruleNumberLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getValue2NumberLiteralParserRuleCall_2_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue2StringLiteralParserRuleCall_2_5_0_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getValue2StringLiteralParserRuleCall_2_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Alternatives_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getRange1Assignment_3_3_0()); }
		(rule__ObjectLiteral__Range1Assignment_3_3_0)
		{ after(grammarAccess.getObjectLiteralAccess().getRange1Assignment_3_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getObjectLiteralAccess().getRange1_tAssignment_3_3_1()); }
		(rule__ObjectLiteral__Range1_tAssignment_3_3_1)
		{ after(grammarAccess.getObjectLiteralAccess().getRange1_tAssignment_3_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue1Assignment_2_0()); }
		(rule__RangeLiteral__Value1Assignment_2_0)
		{ after(grammarAccess.getRangeLiteralAccess().getValue1Assignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue_l1Assignment_2_1()); }
		(rule__RangeLiteral__Value_l1Assignment_2_1)
		{ after(grammarAccess.getRangeLiteralAccess().getValue_l1Assignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue2Assignment_4_0()); }
		(rule__RangeLiteral__Value2Assignment_4_0)
		{ after(grammarAccess.getRangeLiteralAccess().getValue2Assignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue_l2Assignment_4_1()); }
		(rule__RangeLiteral__Value_l2Assignment_4_1)
		{ after(grammarAccess.getRangeLiteralAccess().getValue_l2Assignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInputAccess().getGroup_0()); }
		(rule__FunctionInput__Group_0__0)
		{ after(grammarAccess.getFunctionInputAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionInputAccess().getGroup_1()); }
		(rule__FunctionInput__Group_1__0)
		{ after(grammarAccess.getFunctionInputAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpPostfix__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }
		'++'
		{ after(grammarAccess.getOpPostfixAccess().getPlusSignPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }
		'--'
		{ after(grammarAccess.getOpPostfixAccess().getHyphenMinusHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
		'>='
		{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }
		'<='
		{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_3()); }
		'>'
		{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
		'*'
		{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
		(rule__UnaryOperation__Group_0__0)
		{ after(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperationAccess().getCastExpressionParserRuleCall_1()); }
		ruleCastExpression
		{ after(grammarAccess.getUnaryOperationAccess().getCastExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpUnaryAccess().getNotKeyword_0()); }
		'not'
		{ after(grammarAccess.getOpUnaryAccess().getNotKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
		'+'
		{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getOpAsKeyword_1_0_0_1_0_0()); }
		'as'
		{ after(grammarAccess.getCastExpressionAccess().getOpAsKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastExpressionAccess().getOpParseKeyword_1_0_0_1_0_1()); }
		'parse'
		{ after(grammarAccess.getCastExpressionAccess().getOpParseKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_0()); }
		'String'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntegerKeyword_1()); }
		'Integer'
		{ after(grammarAccess.getTypeAccess().getIntegerKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDateKeyword_2()); }
		'Date'
		{ after(grammarAccess.getTypeAccess().getDateKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDatKeyword_3()); }
		'Dat'
		{ after(grammarAccess.getTypeAccess().getDatKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getObjectKeyword_4()); }
		'Object'
		{ after(grammarAccess.getTypeAccess().getObjectKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDoubleKeyword_5()); }
		'Double'
		{ after(grammarAccess.getTypeAccess().getDoubleKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_0()); }
		ruleParenthesizedExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
		ruleLiteralExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLocalFunctionCallParserRuleCall_2()); }
		ruleLocalFunctionCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getLocalFunctionCallParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getMathFunctionParserRuleCall_3()); }
		ruleMathFunction
		{ after(grammarAccess.getPrimaryExpressionAccess().getMathFunctionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getChannelSendParserRuleCall_4()); }
		ruleChannelSend
		{ after(grammarAccess.getPrimaryExpressionAccess().getChannelSendParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getChannelReceiveParserRuleCall_5()); }
		ruleChannelReceive
		{ after(grammarAccess.getPrimaryExpressionAccess().getChannelReceiveParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTimeFunctionParserRuleCall_6()); }
		ruleTimeFunction
		{ after(grammarAccess.getPrimaryExpressionAccess().getTimeFunctionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getVariableFunctionParserRuleCall_7()); }
		ruleVariableFunction
		{ after(grammarAccess.getPrimaryExpressionAccess().getVariableFunctionParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralParserRuleCall_0()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getNumberLiteralParserRuleCall_1()); }
		ruleNumberLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getNumberLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getStringLiteralParserRuleCall_2()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getStringLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getObjectLiteralParserRuleCall_3()); }
		ruleObjectLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getObjectLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getVariableLiteralParserRuleCall_4()); }
		ruleVariableLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getVariableLiteralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getRangeLiteralParserRuleCall_5()); }
		ruleRangeLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getRangeLiteralParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralExpressionAccess().getFloatLiteralParserRuleCall_6()); }
		ruleFloatLiteral
		{ after(grammarAccess.getLiteralExpressionAccess().getFloatLiteralParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup_0()); }
		(rule__BooleanLiteral__Group_0__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getGroup_1()); }
		(rule__BooleanLiteral__Group_1__0)
		{ after(grammarAccess.getBooleanLiteralAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortExpression__Group__0__Impl
	rule__SortExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortExpressionAccess().getSortKeyword_0()); }
	'sort'
	{ after(grammarAccess.getSortExpressionAccess().getSortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortExpression__Group__1__Impl
	rule__SortExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortExpressionAccess().getTypeAssignment_1()); }
	(rule__SortExpression__TypeAssignment_1)
	{ after(grammarAccess.getSortExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortExpression__Group__2__Impl
	rule__SortExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortExpressionAccess().getTargetAssignment_2()); }
	(rule__SortExpression__TargetAssignment_2)
	{ after(grammarAccess.getSortExpressionAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortExpression__Group__3__Impl
	rule__SortExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortExpressionAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getSortExpressionAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SortExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSortExpressionAccess().getTagetAssignment_4()); }
	(rule__SortExpression__TagetAssignment_4)
	{ after(grammarAccess.getSortExpressionAccess().getTagetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__0__Impl
	rule__Assignment__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__1__Impl
	rule__Assignment__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_1()); }
	(rule__Assignment__FeatureAssignment_0_1)
	{ after(grammarAccess.getAssignmentAccess().getFeatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__2__Impl
	rule__Assignment__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getOpAssignment_0_2()); }
	(rule__Assignment__OpAssignment_0_2)
	{ after(grammarAccess.getAssignmentAccess().getOpAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_0_3()); }
	(rule__Assignment__ValueAssignment_0_3)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_1_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getFeature_objAssignment_1_1()); }
	(rule__Assignment__Feature_objAssignment_1_1)
	{ after(grammarAccess.getAssignmentAccess().getFeature_objAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__2__Impl
	rule__Assignment__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getOpAssignment_1_2()); }
	(rule__Assignment__OpAssignment_1_2)
	{ after(grammarAccess.getAssignmentAccess().getOpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_1_3()); }
	(rule__Assignment__ValueAssignment_1_3)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrintExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group__0__Impl
	rule__PrintExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getPrintExpressionAction_0()); }
	()
	{ after(grammarAccess.getPrintExpressionAccess().getPrintExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group__1__Impl
	rule__PrintExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getPrintlnKeyword_1()); }
	'println'
	{ after(grammarAccess.getPrintExpressionAccess().getPrintlnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrintExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrintExpressionAccess().getPrintAssignment_2()); }
	(rule__PrintExpression__PrintAssignment_2)
	{ after(grammarAccess.getPrintExpressionAccess().getPrintAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
	()
	{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getCondAssignment_3()); }
	(rule__IfExpression__CondAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
	(rule__IfExpression__ThenAssignment_5)
	{ after(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_6()); }
	(rule__IfExpression__Group_6__0)?
	{ after(grammarAccess.getIfExpressionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_6__0__Impl
	rule__IfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
	('else')
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
	(rule__IfExpression__ElseAssignment_6_1)
	{ after(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__0__Impl
	rule__ForExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getForExpressionAction_0()); }
	()
	{ after(grammarAccess.getForExpressionAccess().getForExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__1__Impl
	rule__ForExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForExpressionAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__2__Impl
	rule__ForExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getIndexAssignment_2()); }
	(rule__ForExpression__IndexAssignment_2)
	{ after(grammarAccess.getForExpressionAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__3__Impl
	rule__ForExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getForExpressionAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__4__Impl
	rule__ForExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getObjectAssignment_4()); }
	(rule__ForExpression__ObjectAssignment_4)
	{ after(grammarAccess.getForExpressionAccess().getObjectAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__5__Impl
	rule__ForExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getGroup_5()); }
	(rule__ForExpression__Group_5__0)?
	{ after(grammarAccess.getForExpressionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getBodyAssignment_6()); }
	(rule__ForExpression__BodyAssignment_6)
	{ after(grammarAccess.getForExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group_5__0__Impl
	rule__ForExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getByKeyword_5_0()); }
	'by'
	{ after(grammarAccess.getForExpressionAccess().getByKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getDelimeterAssignment_5_1()); }
	(rule__ForExpression__DelimeterAssignment_5_1)
	{ after(grammarAccess.getForExpressionAccess().getDelimeterAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForDelimeter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDelimeter__Group_2__0__Impl
	rule__ForDelimeter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDelimeterAccess().getTypeAssignment_2_0()); }
	(rule__ForDelimeter__TypeAssignment_2_0)
	{ after(grammarAccess.getForDelimeterAccess().getTypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForDelimeter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForDelimeterAccess().getDelAssignment_2_1()); }
	(rule__ForDelimeter__DelAssignment_2_1)
	{ after(grammarAccess.getForDelimeterAccess().getDelAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__0__Impl
	rule__ForIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getIndicesAssignment_0()); }
	(rule__ForIndex__IndicesAssignment_0)
	{ after(grammarAccess.getForIndexAccess().getIndicesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getGroup_1()); }
	(rule__ForIndex__Group_1__0)*
	{ after(grammarAccess.getForIndexAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForIndex__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group_1__0__Impl
	rule__ForIndex__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getForIndexAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForIndex__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForIndexAccess().getIndicesAssignment_1_1()); }
	(rule__ForIndex__IndicesAssignment_1_1)
	{ after(grammarAccess.getForIndexAccess().getIndicesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableFor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFor__Group__0__Impl
	rule__VariableFor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableForAccess().getVariableDeclarationAction_0()); }
	()
	{ after(grammarAccess.getVariableForAccess().getVariableDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableForAccess().getNameAssignment_1()); }
	(rule__VariableFor__NameAssignment_1)
	{ after(grammarAccess.getVariableForAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__0__Impl
	rule__WhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
	()
	{ after(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__1__Impl
	rule__WhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
	'while'
	{ after(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__2__Impl
	rule__WhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__3__Impl
	rule__WhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getCondAssignment_3()); }
	(rule__WhileExpression__CondAssignment_3)
	{ after(grammarAccess.getWhileExpressionAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__4__Impl
	rule__WhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
	(rule__WhileExpression__BodyAssignment_5)
	{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
	()
	{ after(grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__1__Impl
	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBlockExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__2__Impl
	rule__BlockExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2()); }
	(rule__BlockExpression__ExpressionsAssignment_2)*
	{ after(grammarAccess.getBlockExpressionAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBlockExpressionAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__0__Impl
	rule__VariableDeclaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableDeclarationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__1__Impl
	rule__VariableDeclaration__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_0_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_0_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0_2()); }
	(rule__VariableDeclaration__Group_0_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_0_2_0()); }
	(rule__VariableDeclaration__Group_0_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_0_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2_0__0__Impl
	rule__VariableDeclaration__Group_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_0_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2_0__1__Impl
	rule__VariableDeclaration__Group_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_0_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_0_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_0_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_0_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_0_2_0_2()); }
	(rule__VariableDeclaration__Alternatives_0_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_0_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__0__Impl
	rule__VariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentDeclarationAction_1_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentDeclarationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__1__Impl
	rule__VariableDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_1_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_1_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1_2()); }
	(rule__VariableDeclaration__Group_1_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_1_2_0()); }
	(rule__VariableDeclaration__Group_1_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_1_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2_0__0__Impl
	rule__VariableDeclaration__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_1_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2_0__1__Impl
	rule__VariableDeclaration__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_1_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_1_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_1_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_1_2_0_2()); }
	(rule__VariableDeclaration__RightAssignment_1_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_1_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getDatDeclarationAction_2_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getDatDeclarationAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__1__Impl
	rule__VariableDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_2_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2_2()); }
	(rule__VariableDeclaration__Group_2_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2_2_0()); }
	(rule__VariableDeclaration__Group_2_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0__0__Impl
	rule__VariableDeclaration__Group_2_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_2_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_2_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0__1__Impl
	rule__VariableDeclaration__Group_2_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_2_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0__2__Impl
	rule__VariableDeclaration__Group_2_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_2_0_2()); }
	(rule__VariableDeclaration__Alternatives_2_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2_2_0_3()); }
	(rule__VariableDeclaration__Group_2_2_0_3__0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2_2_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0_3__0__Impl
	rule__VariableDeclaration__Group_2_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getOnCloudAssignment_2_2_0_3_0()); }
	(rule__VariableDeclaration__OnCloudAssignment_2_2_0_3_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getOnCloudAssignment_2_2_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2_2_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2_2_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentAssignment_2_2_0_3_1()); }
	(rule__VariableDeclaration__EnvironmentAssignment_2_2_0_3_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentAssignment_2_2_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3__0__Impl
	rule__VariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getRandomDeclarationAction_3_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getRandomDeclarationAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3__1__Impl
	rule__VariableDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_3_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_3_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_3_2()); }
	(rule__VariableDeclaration__Group_3_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_3_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_3_2_0()); }
	(rule__VariableDeclaration__NameAssignment_3_2_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__0__Impl
	rule__VariableDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getBinDeclarationAction_4_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getBinDeclarationAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__1__Impl
	rule__VariableDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_4_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_4_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_4_2()); }
	(rule__VariableDeclaration__Group_4_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_4_2_0()); }
	(rule__VariableDeclaration__Group_4_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_4_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4_2_0__0__Impl
	rule__VariableDeclaration__Group_4_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_4_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_4_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_4_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4_2_0__1__Impl
	rule__VariableDeclaration__Group_4_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_4_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_4_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_4_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_4_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_4_2_0_2()); }
	(rule__VariableDeclaration__RightAssignment_4_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_4_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5__0__Impl
	rule__VariableDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getOptimizerDeclarationAction_5_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getOptimizerDeclarationAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5__1__Impl
	rule__VariableDeclaration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_5_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_5_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_5_2()); }
	(rule__VariableDeclaration__Group_5_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_5_2_0()); }
	(rule__VariableDeclaration__Group_5_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_5_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5_2_0__0__Impl
	rule__VariableDeclaration__Group_5_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_5_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_5_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_5_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5_2_0__1__Impl
	rule__VariableDeclaration__Group_5_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_5_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_5_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getRightAssignment_5_2_0_2()); }
	(rule__VariableDeclaration__RightAssignment_5_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getRightAssignment_5_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6__0__Impl
	rule__VariableDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getChannelDeclarationAction_6_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getChannelDeclarationAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6__1__Impl
	rule__VariableDeclaration__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_6_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_6_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_6_2()); }
	(rule__VariableDeclaration__Group_6_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_6_2_0()); }
	(rule__VariableDeclaration__Group_6_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_6_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6_2_0__0__Impl
	rule__VariableDeclaration__Group_6_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_6_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_6_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_6_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6_2_0__1__Impl
	rule__VariableDeclaration__Group_6_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getOnKeyword_6_2_0_1()); }
	'on'
	{ after(grammarAccess.getVariableDeclarationAccess().getOnKeyword_6_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_6_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentAssignment_6_2_0_2()); }
	(rule__VariableDeclaration__EnvironmentAssignment_6_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentAssignment_6_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7__0__Impl
	rule__VariableDeclaration__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getConstantDeclarationAction_7_0()); }
	()
	{ after(grammarAccess.getVariableDeclarationAccess().getConstantDeclarationAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7__1__Impl
	rule__VariableDeclaration__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_7_1()); }
	(rule__VariableDeclaration__TypeobjectAssignment_7_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_7_2()); }
	(rule__VariableDeclaration__Group_7_2__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_7_2_0()); }
	(rule__VariableDeclaration__Group_7_2_0__0)
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_7_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7_2_0__0__Impl
	rule__VariableDeclaration__Group_7_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_7_2_0_0()); }
	(rule__VariableDeclaration__NameAssignment_7_2_0_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_7_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7_2_0__1__Impl
	rule__VariableDeclaration__Group_7_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_7_2_0_1()); }
	'='
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_7_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_7_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_7_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_7_2_0_2()); }
	(rule__VariableDeclaration__Alternatives_7_2_0_2)
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_7_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0__0__Impl
	rule__Object__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getNameObjectDefAction_0_0()); }
	()
	{ after(grammarAccess.getObjectAccess().getNameObjectDefAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0__1__Impl
	rule__Object__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_0_1()); }
	'{'
	{ after(grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0__2__Impl
	rule__Object__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getFeaturesAssignment_0_2()); }
	(rule__Object__FeaturesAssignment_0_2)?
	{ after(grammarAccess.getObjectAccess().getFeaturesAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0__3__Impl
	rule__Object__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getGroup_0_3()); }
	(rule__Object__Group_0_3__0)*
	{ after(grammarAccess.getObjectAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_0_4()); }
	'}'
	{ after(grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0_3__0__Impl
	rule__Object__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getFeaturesAssignment_0_3_1()); }
	(rule__Object__FeaturesAssignment_0_3_1)
	{ after(grammarAccess.getObjectAccess().getFeaturesAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__0__Impl
	rule__Object__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getArrayDefinitionAction_1_0()); }
	()
	{ after(grammarAccess.getObjectAccess().getArrayDefinitionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__1__Impl
	rule__Object__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getTypeAssignment_1_1()); }
	(rule__Object__TypeAssignment_1_1)
	{ after(grammarAccess.getObjectAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__2__Impl
	rule__Object__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getIndexesAssignment_1_2()); }
	(rule__Object__IndexesAssignment_1_2)
	{ after(grammarAccess.getObjectAccess().getIndexesAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getIndexesAssignment_1_3()); }
	(rule__Object__IndexesAssignment_1_3)*
	{ after(grammarAccess.getObjectAccess().getIndexesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2__0__Impl
	rule__Object__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getArrayInitAction_2_0()); }
	()
	{ after(grammarAccess.getObjectAccess().getArrayInitAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2__1__Impl
	rule__Object__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getObjectAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2__2__Impl
	rule__Object__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getValuesAssignment_2_2()); }
	(rule__Object__ValuesAssignment_2_2)?
	{ after(grammarAccess.getObjectAccess().getValuesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2__3__Impl
	rule__Object__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getGroup_2_3()); }
	(rule__Object__Group_2_3__0)*
	{ after(grammarAccess.getObjectAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getObjectAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2_3__0__Impl
	rule__Object__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getObjectAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Object__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectAccess().getValuesAssignment_2_3_1()); }
	(rule__Object__ValuesAssignment_2_3_1)
	{ after(grammarAccess.getObjectAccess().getValuesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getValueAssignment_1()); }
	(rule__Index__ValueAssignment_1)
	{ after(grammarAccess.getIndexAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0__0__Impl
	rule__ArrayValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getArrayValueAction_0_0()); }
	()
	{ after(grammarAccess.getArrayValueAccess().getArrayValueAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0__1__Impl
	rule__ArrayValue__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_0_1()); }
	'['
	{ after(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0__2__Impl
	rule__ArrayValue__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValuesAssignment_0_2()); }
	(rule__ArrayValue__ValuesAssignment_0_2)?
	{ after(grammarAccess.getArrayValueAccess().getValuesAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0__3__Impl
	rule__ArrayValue__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_0_3()); }
	(rule__ArrayValue__Group_0_3__0)*
	{ after(grammarAccess.getArrayValueAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_0_4()); }
	']'
	{ after(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0_3__0__Impl
	rule__ArrayValue__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getArrayValueAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValuesAssignment_0_3_1()); }
	(rule__ArrayValue__ValuesAssignment_0_3_1)
	{ after(grammarAccess.getArrayValueAccess().getValuesAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group__0__Impl
	rule__DeclarationObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getDeclarationObjectAction_0()); }
	()
	{ after(grammarAccess.getDeclarationObjectAccess().getDeclarationObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group__1__Impl
	rule__DeclarationObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getDeclarationObjectAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group__2__Impl
	rule__DeclarationObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getFeaturesAssignment_2()); }
	(rule__DeclarationObject__FeaturesAssignment_2)
	{ after(grammarAccess.getDeclarationObjectAccess().getFeaturesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group__3__Impl
	rule__DeclarationObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getGroup_3()); }
	(rule__DeclarationObject__Group_3__0)*
	{ after(grammarAccess.getDeclarationObjectAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getDeclarationObjectAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationObject__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group_3__0__Impl
	rule__DeclarationObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getDeclarationObjectAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationObjectAccess().getFeaturesAssignment_3_1()); }
	(rule__DeclarationObject__FeaturesAssignment_3_1)
	{ after(grammarAccess.getDeclarationObjectAccess().getFeaturesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarationFeature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationFeature__Group__0__Impl
	rule__DeclarationFeature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationFeatureAccess().getDeclarationFeatureAction_0()); }
	()
	{ after(grammarAccess.getDeclarationFeatureAccess().getDeclarationFeatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationFeature__Group__1__Impl
	rule__DeclarationFeature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationFeatureAccess().getFeatureAssignment_1()); }
	(rule__DeclarationFeature__FeatureAssignment_1)
	{ after(grammarAccess.getDeclarationFeatureAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationFeature__Group__2__Impl
	rule__DeclarationFeature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationFeatureAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDeclarationFeatureAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarationFeature__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationFeatureAccess().getAlternatives_3()); }
	(rule__DeclarationFeature__Alternatives_3)
	{ after(grammarAccess.getDeclarationFeatureAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeautureName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeautureName__Group_0__0__Impl
	rule__FeautureName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeautureNameAccess().getFeatureAssignment_0_0()); }
	(rule__FeautureName__FeatureAssignment_0_0)
	{ after(grammarAccess.getFeautureNameAccess().getFeatureAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeautureName__Group_0__1__Impl
	rule__FeautureName__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeautureNameAccess().getEqualsSignKeyword_0_1()); }
	'='
	{ after(grammarAccess.getFeautureNameAccess().getEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeautureName__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeautureNameAccess().getValueAssignment_0_2()); }
	(rule__FeautureName__ValueAssignment_0_2)
	{ after(grammarAccess.getFeautureNameAccess().getValueAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_0__0__Impl
	rule__ObjectLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getNameObjectAction_0_0()); }
	()
	{ after(grammarAccess.getObjectLiteralAccess().getNameObjectAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_0__1__Impl
	rule__ObjectLiteral__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getNameAssignment_0_1()); }
	(rule__ObjectLiteral__NameAssignment_0_1)
	{ after(grammarAccess.getObjectLiteralAccess().getNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_0__2__Impl
	rule__ObjectLiteral__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getFullStopKeyword_0_2()); }
	'.'
	{ after(grammarAccess.getObjectLiteralAccess().getFullStopKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getValueAssignment_0_3()); }
	(rule__ObjectLiteral__ValueAssignment_0_3)
	{ after(grammarAccess.getObjectLiteralAccess().getValueAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_1__0__Impl
	rule__ObjectLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getIndexObjectAction_1_0()); }
	()
	{ after(grammarAccess.getObjectLiteralAccess().getIndexObjectAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_1__1__Impl
	rule__ObjectLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getNameAssignment_1_1()); }
	(rule__ObjectLiteral__NameAssignment_1_1)
	{ after(grammarAccess.getObjectLiteralAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_1__2__Impl
	rule__ObjectLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getIndexesAssignment_1_2()); }
	(rule__ObjectLiteral__IndexesAssignment_1_2)
	{ after(grammarAccess.getObjectLiteralAccess().getIndexesAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getIndexesAssignment_1_3()); }
	(rule__ObjectLiteral__IndexesAssignment_1_3)*
	{ after(grammarAccess.getObjectLiteralAccess().getIndexesAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__0__Impl
	rule__ObjectLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getDatSingleObjectAction_2_0()); }
	()
	{ after(grammarAccess.getObjectLiteralAccess().getDatSingleObjectAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__1__Impl
	rule__ObjectLiteral__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getNameAssignment_2_1()); }
	(rule__ObjectLiteral__NameAssignment_2_1)
	{ after(grammarAccess.getObjectLiteralAccess().getNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__2__Impl
	rule__ObjectLiteral__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getLeftSquareBracketKeyword_2_2()); }
	'['
	{ after(grammarAccess.getObjectLiteralAccess().getLeftSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__3__Impl
	rule__ObjectLiteral__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getValue1Assignment_2_3()); }
	(rule__ObjectLiteral__Value1Assignment_2_3)
	{ after(grammarAccess.getObjectLiteralAccess().getValue1Assignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__4__Impl
	rule__ObjectLiteral__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_4()); }
	','
	{ after(grammarAccess.getObjectLiteralAccess().getCommaKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__5__Impl
	rule__ObjectLiteral__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getValue2Assignment_2_5()); }
	(rule__ObjectLiteral__Value2Assignment_2_5)
	{ after(grammarAccess.getObjectLiteralAccess().getValue2Assignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getRightSquareBracketKeyword_2_6()); }
	']'
	{ after(grammarAccess.getObjectLiteralAccess().getRightSquareBracketKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__0__Impl
	rule__ObjectLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getDatTableObjectAction_3_0()); }
	()
	{ after(grammarAccess.getObjectLiteralAccess().getDatTableObjectAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__1__Impl
	rule__ObjectLiteral__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getNameAssignment_3_1()); }
	(rule__ObjectLiteral__NameAssignment_3_1)
	{ after(grammarAccess.getObjectLiteralAccess().getNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__2__Impl
	rule__ObjectLiteral__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getLeftSquareBracketKeyword_3_2()); }
	'['
	{ after(grammarAccess.getObjectLiteralAccess().getLeftSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__3__Impl
	rule__ObjectLiteral__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getAlternatives_3_3()); }
	(rule__ObjectLiteral__Alternatives_3_3)
	{ after(grammarAccess.getObjectLiteralAccess().getAlternatives_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__4__Impl
	rule__ObjectLiteral__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getCommaKeyword_3_4()); }
	','
	{ after(grammarAccess.getObjectLiteralAccess().getCommaKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__5__Impl
	rule__ObjectLiteral__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getRange2Assignment_3_5()); }
	(rule__ObjectLiteral__Range2Assignment_3_5)
	{ after(grammarAccess.getObjectLiteralAccess().getRange2Assignment_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectLiteral__Group_3__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group_3__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectLiteralAccess().getRightSquareBracketKeyword_3_6()); }
	']'
	{ after(grammarAccess.getObjectLiteralAccess().getRightSquareBracketKeyword_3_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubIndex__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group__0__Impl
	rule__SubIndex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSubIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group__1__Impl
	rule__SubIndex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getValueAssignment_1()); }
	(rule__SubIndex__ValueAssignment_1)
	{ after(grammarAccess.getSubIndexAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group__2__Impl
	rule__SubIndex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getGroup_2()); }
	(rule__SubIndex__Group_2__0)?
	{ after(grammarAccess.getSubIndexAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getSubIndexAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubIndex__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group_2__0__Impl
	rule__SubIndex__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getSubIndexAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubIndex__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubIndexAccess().getValue2Assignment_2_1()); }
	(rule__SubIndex__Value2Assignment_2_1)
	{ after(grammarAccess.getSubIndexAccess().getValue2Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__0__Impl
	rule__RangeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getRangeLiteralAction_0()); }
	()
	{ after(grammarAccess.getRangeLiteralAccess().getRangeLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__1__Impl
	rule__RangeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRangeLiteralAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__2__Impl
	rule__RangeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getAlternatives_2()); }
	(rule__RangeLiteral__Alternatives_2)
	{ after(grammarAccess.getRangeLiteralAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__3__Impl
	rule__RangeLiteral__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getRangeLiteralAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__4__Impl
	rule__RangeLiteral__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getAlternatives_4()); }
	(rule__RangeLiteral__Alternatives_4)
	{ after(grammarAccess.getRangeLiteralAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeLiteral__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeLiteralAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getRangeLiteralAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__0__Impl
	rule__MathFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getMathFunctionAction_0()); }
	()
	{ after(grammarAccess.getMathFunctionAccess().getMathFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__1__Impl
	rule__MathFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getMathKeyword_1()); }
	'Math'
	{ after(grammarAccess.getMathFunctionAccess().getMathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__2__Impl
	rule__MathFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getMathFunctionAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__3__Impl
	rule__MathFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getFeatureAssignment_3()); }
	(rule__MathFunction__FeatureAssignment_3)
	{ after(grammarAccess.getMathFunctionAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__4__Impl
	rule__MathFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getMathFunctionAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__5__Impl
	rule__MathFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getExpressionsAssignment_5()); }
	(rule__MathFunction__ExpressionsAssignment_5)?
	{ after(grammarAccess.getMathFunctionAccess().getExpressionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__6__Impl
	rule__MathFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getGroup_6()); }
	(rule__MathFunction__Group_6__0)*
	{ after(grammarAccess.getMathFunctionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getMathFunctionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathFunction__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group_6__0__Impl
	rule__MathFunction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getMathFunctionAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathFunction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathFunctionAccess().getExpressionsAssignment_6_1()); }
	(rule__MathFunction__ExpressionsAssignment_6_1)
	{ after(grammarAccess.getMathFunctionAccess().getExpressionsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__0__Impl
	rule__VariableFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getVariableFunctionAction_0()); }
	()
	{ after(grammarAccess.getVariableFunctionAccess().getVariableFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__1__Impl
	rule__VariableFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getTargetAssignment_1()); }
	(rule__VariableFunction__TargetAssignment_1)
	{ after(grammarAccess.getVariableFunctionAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__2__Impl
	rule__VariableFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getVariableFunctionAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__3__Impl
	rule__VariableFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getFeatureAssignment_3()); }
	(rule__VariableFunction__FeatureAssignment_3)
	{ after(grammarAccess.getVariableFunctionAccess().getFeatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__4__Impl
	rule__VariableFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getVariableFunctionAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__5__Impl
	rule__VariableFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getExpressionsAssignment_5()); }
	(rule__VariableFunction__ExpressionsAssignment_5)?
	{ after(grammarAccess.getVariableFunctionAccess().getExpressionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__6__Impl
	rule__VariableFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getGroup_6()); }
	(rule__VariableFunction__Group_6__0)*
	{ after(grammarAccess.getVariableFunctionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getVariableFunctionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableFunction__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group_6__0__Impl
	rule__VariableFunction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getVariableFunctionAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableFunction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableFunctionAccess().getExpressionsAssignment_6_1()); }
	(rule__VariableFunction__ExpressionsAssignment_6_1)
	{ after(grammarAccess.getVariableFunctionAccess().getExpressionsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionReturn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionReturn__Group__0__Impl
	rule__FunctionReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionReturnAccess().getFunctionReturnAction_0()); }
	()
	{ after(grammarAccess.getFunctionReturnAccess().getFunctionReturnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionReturn__Group__1__Impl
	rule__FunctionReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionReturnAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getFunctionReturnAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionReturn__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionReturnAccess().getExpressionAssignment_2()); }
	(rule__FunctionReturn__ExpressionAssignment_2)
	{ after(grammarAccess.getFunctionReturnAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
	()
	{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getFuncKeyword_1()); }
	'func'
	{ after(grammarAccess.getFunctionDefinitionAccess().getFuncKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
	(rule__FunctionDefinition__NameAssignment_2)
	{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_4()); }
	(rule__FunctionDefinition__ParametersAssignment_4)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__5__Impl
	rule__FunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
	(rule__FunctionDefinition__Group_5__0)*
	{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__6__Impl
	rule__FunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_7()); }
	(rule__FunctionDefinition__BodyAssignment_7)
	{ after(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_5__0__Impl
	rule__FunctionDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5_1()); }
	(rule__FunctionDefinition__ParametersAssignment_5_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getParametersAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__0__Impl
	rule__Params__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getVariableDeclarationAction_0()); }
	()
	{ after(grammarAccess.getParamsAccess().getVariableDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getNameAssignment_1()); }
	(rule__Params__NameAssignment_1)
	{ after(grammarAccess.getParamsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelSend__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelSend__Group__0__Impl
	rule__ChannelSend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelSendAccess().getChannelSendAction_0()); }
	()
	{ after(grammarAccess.getChannelSendAccess().getChannelSendAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelSend__Group__1__Impl
	rule__ChannelSend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelSendAccess().getTargetAssignment_1()); }
	(rule__ChannelSend__TargetAssignment_1)
	{ after(grammarAccess.getChannelSendAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelSend__Group__2__Impl
	rule__ChannelSend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelSendAccess().getExclamationMarkKeyword_2()); }
	'!'
	{ after(grammarAccess.getChannelSendAccess().getExclamationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelSend__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelSendAccess().getExpressionAssignment_3()); }
	(rule__ChannelSend__ExpressionAssignment_3)
	{ after(grammarAccess.getChannelSendAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelReceive__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelReceive__Group__0__Impl
	rule__ChannelReceive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelReceiveAccess().getChannelReceiveAction_0()); }
	()
	{ after(grammarAccess.getChannelReceiveAccess().getChannelReceiveAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelReceive__Group__1__Impl
	rule__ChannelReceive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelReceiveAccess().getTargetAssignment_1()); }
	(rule__ChannelReceive__TargetAssignment_1)
	{ after(grammarAccess.getChannelReceiveAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChannelReceive__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelReceiveAccess().getQuestionMarkKeyword_2()); }
	'?'
	{ after(grammarAccess.getChannelReceiveAccess().getQuestionMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionCall__Group__0__Impl
	rule__LocalFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionCallAccess().getLocalFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getLocalFunctionCallAccess().getLocalFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionCall__Group__1__Impl
	rule__LocalFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionCallAccess().getTargetAssignment_1()); }
	(rule__LocalFunctionCall__TargetAssignment_1)
	{ after(grammarAccess.getLocalFunctionCallAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionCall__Group__2__Impl
	rule__LocalFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLocalFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionCall__Group__3__Impl
	rule__LocalFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionCallAccess().getInputAssignment_3()); }
	(rule__LocalFunctionCall__InputAssignment_3)
	{ after(grammarAccess.getLocalFunctionCallAccess().getInputAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLocalFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunctionInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionInput__Group__0__Impl
	rule__LocalFunctionInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionInputAccess().getLocalFunctionInputAction_0()); }
	()
	{ after(grammarAccess.getLocalFunctionInputAccess().getLocalFunctionInputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionInput__Group__1__Impl
	rule__LocalFunctionInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionInputAccess().getInputsAssignment_1()); }
	(rule__LocalFunctionInput__InputsAssignment_1)?
	{ after(grammarAccess.getLocalFunctionInputAccess().getInputsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionInput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionInputAccess().getGroup_2()); }
	(rule__LocalFunctionInput__Group_2__0)*
	{ after(grammarAccess.getLocalFunctionInputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunctionInput__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionInput__Group_2__0__Impl
	rule__LocalFunctionInput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionInputAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getLocalFunctionInputAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunctionInput__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionInputAccess().getInputsAssignment_2_1()); }
	(rule__LocalFunctionInput__InputsAssignment_2_1)
	{ after(grammarAccess.getLocalFunctionInputAccess().getInputsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FlyFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__0__Impl
	rule__FlyFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getFlyFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getFlyFunctionCallAccess().getFlyFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__1__Impl
	rule__FlyFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAssignment_1()); }
	(rule__FlyFunctionCall__IsAsyncAssignment_1)?
	{ after(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__2__Impl
	rule__FlyFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getFlyKeyword_2()); }
	'fly'
	{ after(grammarAccess.getFlyFunctionCallAccess().getFlyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__3__Impl
	rule__FlyFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getTargetAssignment_3()); }
	(rule__FlyFunctionCall__TargetAssignment_3)
	{ after(grammarAccess.getFlyFunctionCallAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__4__Impl
	rule__FlyFunctionCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getInputAssignment_4()); }
	(rule__FlyFunctionCall__InputAssignment_4)?
	{ after(grammarAccess.getFlyFunctionCallAccess().getInputAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__5__Impl
	rule__FlyFunctionCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getOnKeyword_5()); }
	'on'
	{ after(grammarAccess.getFlyFunctionCallAccess().getOnKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__6__Impl
	rule__FlyFunctionCall__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getEnvironmentAssignment_6()); }
	(rule__FlyFunctionCall__EnvironmentAssignment_6)
	{ after(grammarAccess.getFlyFunctionCallAccess().getEnvironmentAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__7__Impl
	rule__FlyFunctionCall__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getGroup_7()); }
	(rule__FlyFunctionCall__Group_7__0)?
	{ after(grammarAccess.getFlyFunctionCallAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getGroup_8()); }
	(rule__FlyFunctionCall__Group_8__0)?
	{ after(grammarAccess.getFlyFunctionCallAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FlyFunctionCall__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group_7__0__Impl
	rule__FlyFunctionCall__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenAssignment_7_0()); }
	(rule__FlyFunctionCall__Is_thenAssignment_7_0)
	{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getThenAssignment_7_1()); }
	(rule__FlyFunctionCall__ThenAssignment_7_1)
	{ after(grammarAccess.getFlyFunctionCallAccess().getThenAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FlyFunctionCall__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group_8__0__Impl
	rule__FlyFunctionCall__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenallAssignment_8_0()); }
	(rule__FlyFunctionCall__Is_thenallAssignment_8_0)
	{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenallAssignment_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FlyFunctionCall__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFlyFunctionCallAccess().getThenallAssignment_8_1()); }
	(rule__FlyFunctionCall__ThenallAssignment_8_1)
	{ after(grammarAccess.getFlyFunctionCallAccess().getThenallAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInput__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0__0__Impl
	rule__FunctionInput__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getFunctionInputAction_0_0()); }
	()
	{ after(grammarAccess.getFunctionInputAccess().getFunctionInputAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0__1__Impl
	rule__FunctionInput__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getFunctionInputAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0__2__Impl
	rule__FunctionInput__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getExpressionsAssignment_0_2()); }
	(rule__FunctionInput__ExpressionsAssignment_0_2)?
	{ after(grammarAccess.getFunctionInputAccess().getExpressionsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0__3__Impl
	rule__FunctionInput__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getGroup_0_3()); }
	(rule__FunctionInput__Group_0_3__0)*
	{ after(grammarAccess.getFunctionInputAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getRightParenthesisKeyword_0_4()); }
	')'
	{ after(grammarAccess.getFunctionInputAccess().getRightParenthesisKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInput__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0_3__0__Impl
	rule__FunctionInput__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getCommaKeyword_0_3_0()); }
	','
	{ after(grammarAccess.getFunctionInputAccess().getCommaKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getExpressionsAssignment_0_3_1()); }
	(rule__FunctionInput__ExpressionsAssignment_0_3_1)
	{ after(grammarAccess.getFunctionInputAccess().getExpressionsAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInput__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_1__0__Impl
	rule__FunctionInput__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getFunctionInputAction_1_0()); }
	()
	{ after(grammarAccess.getFunctionInputAccess().getFunctionInputAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_1__1__Impl
	rule__FunctionInput__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getIs_for_indexAssignment_1_1()); }
	(rule__FunctionInput__Is_for_indexAssignment_1_1)
	{ after(grammarAccess.getFunctionInputAccess().getIs_for_indexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInput__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInputAccess().getF_indexAssignment_1_2()); }
	(rule__FunctionInput__F_indexAssignment_1_2)
	{ after(grammarAccess.getFunctionInputAccess().getF_indexAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NativeExpression__Group__0__Impl
	rule__NativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNativeExpressionAccess().getNativeExpressionAction_0()); }
	()
	{ after(grammarAccess.getNativeExpressionAccess().getNativeExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NativeExpression__Group__1__Impl
	rule__NativeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNativeExpressionAccess().getNativeKeyword_1()); }
	'native'
	{ after(grammarAccess.getNativeExpressionAccess().getNativeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NativeExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNativeExpressionAccess().getCodeAssignment_2()); }
	(rule__NativeExpression__CodeAssignment_2)
	{ after(grammarAccess.getNativeExpressionAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequireExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__0__Impl
	rule__RequireExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getRequireExpressionAction_0()); }
	()
	{ after(grammarAccess.getRequireExpressionAccess().getRequireExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__1__Impl
	rule__RequireExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getRequireKeyword_1()); }
	'require'
	{ after(grammarAccess.getRequireExpressionAccess().getRequireKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__2__Impl
	rule__RequireExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getRequireExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__3__Impl
	rule__RequireExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getLibAssignment_3()); }
	(rule__RequireExpression__LibAssignment_3)
	{ after(grammarAccess.getRequireExpressionAccess().getLibAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__4__Impl
	rule__RequireExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRequireExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__5__Impl
	rule__RequireExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getOnKeyword_5()); }
	'on'
	{ after(grammarAccess.getRequireExpressionAccess().getOnKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequireExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireExpressionAccess().getEnvironmentAssignment_6()); }
	(rule__RequireExpression__EnvironmentAssignment_6)
	{ after(grammarAccess.getRequireExpressionAccess().getEnvironmentAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixOperation__Group__0__Impl
	rule__PostfixOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixOperationAccess().getVariableAssignment_0()); }
	(rule__PostfixOperation__VariableAssignment_0)
	{ after(grammarAccess.getPostfixOperationAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixOperationAccess().getFeatureAssignment_1()); }
	(rule__PostfixOperation__FeatureAssignment_1)
	{ after(grammarAccess.getPostfixOperationAccess().getFeatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
	(rule__OrExpression__Group_1_0__0)
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__OrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
	(rule__OrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__OrExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
	(rule__AndExpression__Group_1_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__AndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
	(rule__AndExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__AndExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
	(rule__EqualityExpression__Group_1_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
	(rule__EqualityExpression__RightAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
	(rule__EqualityExpression__Group_1_0_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__0__Impl
	rule__EqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__EqualityExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
	(rule__RelationalExpression__Group_1__0)*
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
	(rule__RelationalExpression__Group_1_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
	(rule__RelationalExpression__RightAssignment_1_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
	(rule__RelationalExpression__Group_1_0_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__RelationalExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
	(rule__AdditiveExpression__Group_1_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
	(rule__AdditiveExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
	(rule__AdditiveExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__AdditiveExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
	(rule__MultiplicativeExpression__Group_1_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicativeExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
	(rule__MultiplicativeExpression__Group_1_0_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
	(rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryOperation__Group_0__0__Impl
	rule__UnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryOperation__Group_0__1__Impl
	rule__UnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
	(rule__UnaryOperation__FeatureAssignment_0_1)
	{ after(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
	(rule__UnaryOperation__OperandAssignment_0_2)
	{ after(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group__0__Impl
	rule__CastExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
	{ after(grammarAccess.getCastExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getGroup_1()); }
	(rule__CastExpression__Group_1__0)*
	{ after(grammarAccess.getCastExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__0__Impl
	rule__CastExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getGroup_1_0()); }
	(rule__CastExpression__Group_1_0__0)
	{ after(grammarAccess.getCastExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
	(rule__CastExpression__TypeAssignment_1_1)
	{ after(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getGroup_1_0_0()); }
	(rule__CastExpression__Group_1_0_0__0)
	{ after(grammarAccess.getCastExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1_0_0__0__Impl
	rule__CastExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getCastExpressionTargetAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCastExpressionAccess().getCastExpressionTargetAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__CastExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getCastExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeFunction__Group__0__Impl
	rule__TimeFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeFunctionAccess().getTimeFunctionAction_0()); }
	()
	{ after(grammarAccess.getTimeFunctionAccess().getTimeFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeFunction__Group__1__Impl
	rule__TimeFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeFunctionAccess().getTimeKeyword_1()); }
	'time'
	{ after(grammarAccess.getTimeFunctionAccess().getTimeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeFunction__Group__2__Impl
	rule__TimeFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTimeFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeFunction__Group__3__Impl
	rule__TimeFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeFunctionAccess().getValueAssignment_3()); }
	(rule__TimeFunction__ValueAssignment_3)*
	{ after(grammarAccess.getTimeFunctionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTimeFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_0__0__Impl
	rule__BooleanLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_0_1()); }
	(rule__BooleanLiteral__ValueAssignment_0_1)
	{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_1__0__Impl
	rule__BooleanLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanLiteral__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_1()); }
	(rule__BooleanLiteral__ValueAssignment_1_1)
	{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
	()
	{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
	(rule__NumberLiteral__ValueAssignment_1)
	{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
	()
	{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
	(rule__StringLiteral__ValueAssignment_1)
	{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatLiteral__Group__0__Impl
	rule__FloatLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatLiteralAccess().getFloatLiteralAction_0()); }
	()
	{ after(grammarAccess.getFloatLiteralAccess().getFloatLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment_1()); }
	(rule__FloatLiteral__ValueAssignment_1)
	{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableLiteral__Group__0__Impl
	rule__VariableLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableLiteralAccess().getVariableLiteralAction_0()); }
	()
	{ after(grammarAccess.getVariableLiteralAccess().getVariableLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableLiteralAccess().getVariableAssignment_1()); }
	(rule__VariableLiteral__VariableAssignment_1)
	{ after(grammarAccess.getVariableLiteralAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getParenthesizedExpressionAction_0()); }
	()
	{ after(grammarAccess.getParenthesizedExpressionAccess().getParenthesizedExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__2__Impl
	rule__ParenthesizedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionAssignment_2()); }
	(rule__ParenthesizedExpression__ExpressionAssignment_2)
	{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fly__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyAccess().getElementsExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getFlyAccess().getElementsExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortExpressionAccess().getTypeAlternatives_1_0()); }
		(rule__SortExpression__TypeAlternatives_1_0)
		{ after(grammarAccess.getSortExpressionAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortExpressionAccess().getTargetVariableDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getSortExpressionAccess().getTargetVariableDeclarationIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSortExpressionAccess().getTargetVariableDeclarationIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getSortExpressionAccess().getTargetVariableDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SortExpression__TagetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSortExpressionAccess().getTagetIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getSortExpressionAccess().getTagetIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__FeatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getFeatureVariableLiteralParserRuleCall_0_1_0()); }
		ruleVariableLiteral
		{ after(grammarAccess.getAssignmentAccess().getFeatureVariableLiteralParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OpAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOpOpAsParserRuleCall_0_2_0()); }
		ruleOpAs
		{ after(grammarAccess.getAssignmentAccess().getOpOpAsParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueArithmeticExpressionParserRuleCall_0_3_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getAssignmentAccess().getValueArithmeticExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Feature_objAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getFeature_objObjectLiteralParserRuleCall_1_1_0()); }
		ruleObjectLiteral
		{ after(grammarAccess.getAssignmentAccess().getFeature_objObjectLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOpOpAsParserRuleCall_1_2_0()); }
		ruleOpAs
		{ after(grammarAccess.getAssignmentAccess().getOpOpAsParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueArithmeticExpressionParserRuleCall_1_3_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getAssignmentAccess().getValueArithmeticExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrintExpression__PrintAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrintExpressionAccess().getPrintArithmeticExpressionParserRuleCall_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getPrintExpressionAccess().getPrintArithmeticExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getCondArithmeticExpressionParserRuleCall_3_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getIfExpressionAccess().getCondArithmeticExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getIndexForIndexParserRuleCall_2_0()); }
		ruleForIndex
		{ after(grammarAccess.getForExpressionAccess().getIndexForIndexParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__ObjectAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getObjectArithmeticExpressionParserRuleCall_4_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getForExpressionAccess().getObjectArithmeticExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__DelimeterAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getDelimeterForDelimeterParserRuleCall_5_1_0()); }
		ruleForDelimeter
		{ after(grammarAccess.getForExpressionAccess().getDelimeterForDelimeterParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getBodyExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getForExpressionAccess().getBodyExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDelimeterAccess().getTypeRowKeyword_0_0()); }
		(
			{ before(grammarAccess.getForDelimeterAccess().getTypeRowKeyword_0_0()); }
			'row'
			{ after(grammarAccess.getForDelimeterAccess().getTypeRowKeyword_0_0()); }
		)
		{ after(grammarAccess.getForDelimeterAccess().getTypeRowKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDelimeterAccess().getTypeColKeyword_1_0()); }
		(
			{ before(grammarAccess.getForDelimeterAccess().getTypeColKeyword_1_0()); }
			'col'
			{ after(grammarAccess.getForDelimeterAccess().getTypeColKeyword_1_0()); }
		)
		{ after(grammarAccess.getForDelimeterAccess().getTypeColKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDelimeterAccess().getTypeDelimeterKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getForDelimeterAccess().getTypeDelimeterKeyword_2_0_0()); }
			'delimeter'
			{ after(grammarAccess.getForDelimeterAccess().getTypeDelimeterKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getForDelimeterAccess().getTypeDelimeterKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForDelimeter__DelAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForDelimeterAccess().getDelSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getForDelimeterAccess().getDelSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__IndicesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getIndicesVariableForParserRuleCall_0_0()); }
		ruleVariableFor
		{ after(grammarAccess.getForIndexAccess().getIndicesVariableForParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForIndex__IndicesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForIndexAccess().getIndicesVariableForParserRuleCall_1_1_0()); }
		ruleVariableFor
		{ after(grammarAccess.getForIndexAccess().getIndicesVariableForParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableForAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableForAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getCondArithmeticExpressionParserRuleCall_3_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getWhileExpressionAccess().getCondArithmeticExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectVarKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectVarKeyword_0_1_0()); }
			'var'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectVarKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectVarKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_0_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_0_2_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_0_2_0_2_0_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_0_2_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_0_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightObjectParserRuleCall_0_2_0_2_1_0()); }
		ruleObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightObjectParserRuleCall_0_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_0_2_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightFlyFunctionCallParserRuleCall_0_2_0_2_2_0()); }
		ruleFlyFunctionCall
		{ after(grammarAccess.getVariableDeclarationAccess().getRightFlyFunctionCallParserRuleCall_0_2_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectEnvKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectEnvKeyword_1_1_0()); }
			'env'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectEnvKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectEnvKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_1_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_1_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_1_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_1_2_0_2_0()); }
		ruleDeclarationObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_1_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectDatKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectDatKeyword_2_1_0()); }
			'dat'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectDatKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectDatKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_2_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_2_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_2_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_2_2_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_2_2_0_2_0_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_2_2_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_2_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_2_2_0_2_1_0()); }
		ruleDeclarationObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_2_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__OnCloudAssignment_2_2_0_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getOnCloudOnKeyword_2_2_0_3_0_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getOnCloudOnKeyword_2_2_0_3_0_0()); }
			'on'
			{ after(grammarAccess.getVariableDeclarationAccess().getOnCloudOnKeyword_2_2_0_3_0_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getOnCloudOnKeyword_2_2_0_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__EnvironmentAssignment_2_2_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationCrossReference_2_2_0_3_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_2_2_0_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_2_2_0_3_1_0_1()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationCrossReference_2_2_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectRandomKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectRandomKeyword_3_1_0()); }
			'random'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectRandomKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectRandomKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_3_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectBinKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectBinKeyword_4_1_0()); }
			'bin'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectBinKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectBinKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_4_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_4_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_4_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_4_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_4_2_0_2_0()); }
		ruleDeclarationObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_4_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectOptKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectOptKeyword_5_1_0()); }
			'opt'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectOptKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectOptKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_5_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_5_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_5_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_5_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_5_2_0_2_0()); }
		ruleDeclarationObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightDeclarationObjectParserRuleCall_5_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectChannelKeyword_6_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectChannelKeyword_6_1_0()); }
			'channel'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectChannelKeyword_6_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectChannelKeyword_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_6_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_6_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_6_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__EnvironmentAssignment_6_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_2_0_2_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_2_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_2_0_2_0_1()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeobjectAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectConstKeyword_7_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getTypeobjectConstKeyword_7_1_0()); }
			'const'
			{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectConstKeyword_7_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeobjectConstKeyword_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_7_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_7_2_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_7_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_7_2_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_7_2_0_2_0_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getRightArithmeticExpressionParserRuleCall_7_2_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__RightAssignment_7_2_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getRightObjectParserRuleCall_7_2_0_2_1_0()); }
		ruleObject
		{ after(grammarAccess.getVariableDeclarationAccess().getRightObjectParserRuleCall_7_2_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__FeaturesAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getFeaturesFeautureNameParserRuleCall_0_2_0()); }
		ruleFeautureName
		{ after(grammarAccess.getObjectAccess().getFeaturesFeautureNameParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__FeaturesAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getFeaturesFeautureNameParserRuleCall_0_3_1_0()); }
		ruleFeautureName
		{ after(grammarAccess.getObjectAccess().getFeaturesFeautureNameParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getTypeTypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getObjectAccess().getTypeTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__IndexesAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getIndexesIndexParserRuleCall_1_2_0()); }
		ruleIndex
		{ after(grammarAccess.getObjectAccess().getIndexesIndexParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__IndexesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getIndexesIndexParserRuleCall_1_3_0()); }
		ruleIndex
		{ after(grammarAccess.getObjectAccess().getIndexesIndexParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ValuesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getValuesArrayValueParserRuleCall_2_2_0()); }
		ruleArrayValue
		{ after(grammarAccess.getObjectAccess().getValuesArrayValueParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ValuesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectAccess().getValuesArrayValueParserRuleCall_2_3_1_0()); }
		ruleArrayValue
		{ after(grammarAccess.getObjectAccess().getValuesArrayValueParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getIndexAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValuesAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValuesArrayValueParserRuleCall_0_2_0()); }
		ruleArrayValue
		{ after(grammarAccess.getArrayValueAccess().getValuesArrayValueParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValuesAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValuesArrayValueParserRuleCall_0_3_1_0()); }
		ruleArrayValue
		{ after(grammarAccess.getArrayValueAccess().getValuesArrayValueParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__FeaturesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationObjectAccess().getFeaturesDeclarationFeatureParserRuleCall_2_0()); }
		ruleDeclarationFeature
		{ after(grammarAccess.getDeclarationObjectAccess().getFeaturesDeclarationFeatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationObject__FeaturesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationObjectAccess().getFeaturesDeclarationFeatureParserRuleCall_3_1_0()); }
		ruleDeclarationFeature
		{ after(grammarAccess.getDeclarationObjectAccess().getFeaturesDeclarationFeatureParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getFeatureIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarationFeatureAccess().getFeatureIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Value_fAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_fIDTerminalRuleCall_3_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_fIDTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Value_sAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_sSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_sSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Value_tAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_tINTTerminalRuleCall_3_2_0()); }
		RULE_INT
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_tINTTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarationFeature__Value_bAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationFeatureAccess().getValue_bBooleanLiteralParserRuleCall_3_3_0()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getDeclarationFeatureAccess().getValue_bBooleanLiteralParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__FeatureAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeautureNameAccess().getFeatureIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFeautureNameAccess().getFeatureIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__ValueAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeautureNameAccess().getValueArithmeticExpressionParserRuleCall_0_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFeautureNameAccess().getValueArithmeticExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeautureName__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeautureNameAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFeautureNameAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__ValueAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValueIDTerminalRuleCall_0_3_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectLiteralAccess().getValueIDTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getObjectLiteralAccess().getNameVariableDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__IndexesAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getIndexesSubIndexParserRuleCall_1_2_0()); }
		ruleSubIndex
		{ after(grammarAccess.getObjectLiteralAccess().getIndexesSubIndexParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__IndexesAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getIndexesSubIndexParserRuleCall_1_3_0()); }
		ruleSubIndex
		{ after(grammarAccess.getObjectLiteralAccess().getIndexesSubIndexParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__NameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Value1Assignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue1Alternatives_2_3_0()); }
		(rule__ObjectLiteral__Value1Alternatives_2_3_0)
		{ after(grammarAccess.getObjectLiteralAccess().getValue1Alternatives_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Value2Assignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getValue2Alternatives_2_5_0()); }
		(rule__ObjectLiteral__Value2Alternatives_2_5_0)
		{ after(grammarAccess.getObjectLiteralAccess().getValue2Alternatives_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__NameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getObjectLiteralAccess().getNameDatDeclarationCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Range1Assignment_3_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getRange1RangeLiteralParserRuleCall_3_3_0_0()); }
		ruleRangeLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getRange1RangeLiteralParserRuleCall_3_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Range1_tAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getRange1_tNumberLiteralParserRuleCall_3_3_1_0()); }
		ruleNumberLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getRange1_tNumberLiteralParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Range2Assignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectLiteralAccess().getRange2RangeLiteralParserRuleCall_3_5_0()); }
		ruleRangeLiteral
		{ after(grammarAccess.getObjectLiteralAccess().getRange2RangeLiteralParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubIndexAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getSubIndexAccess().getValueArithmeticExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubIndex__Value2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubIndexAccess().getValue2ArithmeticExpressionParserRuleCall_2_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getSubIndexAccess().getValue2ArithmeticExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Value1Assignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue1INTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getRangeLiteralAccess().getValue1INTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Value_l1Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue_l1VariableDeclarationCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getRangeLiteralAccess().getValue_l1VariableDeclarationIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRangeLiteralAccess().getValue_l1VariableDeclarationIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getRangeLiteralAccess().getValue_l1VariableDeclarationCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Value2Assignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue2INTTerminalRuleCall_4_0_0()); }
		RULE_INT
		{ after(grammarAccess.getRangeLiteralAccess().getValue2INTTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeLiteral__Value_l2Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeLiteralAccess().getValue_l2VariableDeclarationCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getRangeLiteralAccess().getValue_l2VariableDeclarationIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRangeLiteralAccess().getValue_l2VariableDeclarationIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getRangeLiteralAccess().getValue_l2VariableDeclarationCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathFunctionAccess().getFeatureIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getMathFunctionAccess().getFeatureIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__ExpressionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_5_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getMathFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathFunction__ExpressionsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_6_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getMathFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFunctionAccess().getTargetVariableDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableFunctionAccess().getTargetVariableDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableFunctionAccess().getTargetVariableDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableFunctionAccess().getTargetVariableDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__FeatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFunctionAccess().getFeatureIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableFunctionAccess().getFeatureIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__ExpressionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_5_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getVariableFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableFunction__ExpressionsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_6_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getVariableFunctionAccess().getExpressionsArithmeticExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReturn__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionReturnAccess().getExpressionArithmeticExpressionParserRuleCall_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFunctionReturnAccess().getExpressionArithmeticExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getParametersParamsParserRuleCall_4_0()); }
		ruleParams
		{ after(grammarAccess.getFunctionDefinitionAccess().getParametersParamsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__ParametersAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getParametersParamsParserRuleCall_5_1_0()); }
		ruleParams
		{ after(grammarAccess.getFunctionDefinitionAccess().getParametersParamsParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BodyAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBodyBlockExpressionParserRuleCall_7_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getFunctionDefinitionAccess().getBodyBlockExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParamsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelSendAccess().getTargetChannelDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChannelSendAccess().getTargetChannelDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getChannelSendAccess().getTargetChannelDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChannelSendAccess().getTargetChannelDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelSend__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelSendAccess().getExpressionArithmeticExpressionParserRuleCall_3_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getChannelSendAccess().getExpressionArithmeticExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelReceive__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelReceiveAccess().getTargetChannelDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getChannelReceiveAccess().getTargetChannelDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getChannelReceiveAccess().getTargetChannelDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getChannelReceiveAccess().getTargetChannelDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionCallAccess().getTargetFunctionDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getLocalFunctionCallAccess().getTargetFunctionDefinitionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLocalFunctionCallAccess().getTargetFunctionDefinitionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getLocalFunctionCallAccess().getTargetFunctionDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionCall__InputAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionCallAccess().getInputLocalFunctionInputParserRuleCall_3_0()); }
		ruleLocalFunctionInput
		{ after(grammarAccess.getLocalFunctionCallAccess().getInputLocalFunctionInputParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__InputsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionInputAccess().getInputsArithmeticExpressionParserRuleCall_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getLocalFunctionInputAccess().getInputsArithmeticExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunctionInput__InputsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionInputAccess().getInputsArithmeticExpressionParserRuleCall_2_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getLocalFunctionInputAccess().getInputsArithmeticExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__IsAsyncAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAsyncKeyword_1_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAsyncKeyword_1_0()); }
			'async'
			{ after(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAsyncKeyword_1_0()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getIsAsyncAsyncKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getTargetFunctionDefinitionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getTargetFunctionDefinitionIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFlyFunctionCallAccess().getTargetFunctionDefinitionIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getTargetFunctionDefinitionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__InputAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getInputFunctionInputParserRuleCall_4_0()); }
		ruleFunctionInput
		{ after(grammarAccess.getFlyFunctionCallAccess().getInputFunctionInputParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__EnvironmentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFlyFunctionCallAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Is_thenAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenThenKeyword_7_0_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenThenKeyword_7_0_0()); }
			'then'
			{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenThenKeyword_7_0_0()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenThenKeyword_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__ThenAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getThenFunctionDefinitionCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getThenFunctionDefinitionIDTerminalRuleCall_7_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFlyFunctionCallAccess().getThenFunctionDefinitionIDTerminalRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getThenFunctionDefinitionCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__Is_thenallAssignment_8_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenallThenallKeyword_8_0_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getIs_thenallThenallKeyword_8_0_0()); }
			'thenall'
			{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenallThenallKeyword_8_0_0()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getIs_thenallThenallKeyword_8_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FlyFunctionCall__ThenallAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlyFunctionCallAccess().getThenallFunctionDefinitionCrossReference_8_1_0()); }
		(
			{ before(grammarAccess.getFlyFunctionCallAccess().getThenallFunctionDefinitionIDTerminalRuleCall_8_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFlyFunctionCallAccess().getThenallFunctionDefinitionIDTerminalRuleCall_8_1_0_1()); }
		)
		{ after(grammarAccess.getFlyFunctionCallAccess().getThenallFunctionDefinitionCrossReference_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__ExpressionsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInputAccess().getExpressionsArithmeticExpressionParserRuleCall_0_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFunctionInputAccess().getExpressionsArithmeticExpressionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__ExpressionsAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInputAccess().getExpressionsArithmeticExpressionParserRuleCall_0_3_1_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFunctionInputAccess().getExpressionsArithmeticExpressionParserRuleCall_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__Is_for_indexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInputAccess().getIs_for_indexInKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getFunctionInputAccess().getIs_for_indexInKeyword_1_1_0()); }
			'in'
			{ after(grammarAccess.getFunctionInputAccess().getIs_for_indexInKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getFunctionInputAccess().getIs_for_indexInKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInput__F_indexAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInputAccess().getF_indexArithmeticExpressionParserRuleCall_1_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getFunctionInputAccess().getF_indexArithmeticExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeExpression__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNativeExpressionAccess().getCodeNATIVE_CODETerminalRuleCall_2_0()); }
		RULE_NATIVE_CODE
		{ after(grammarAccess.getNativeExpressionAccess().getCodeNATIVE_CODETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__LibAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireExpressionAccess().getLibSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRequireExpressionAccess().getLibSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequireExpression__EnvironmentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireExpressionAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_0()); }
		(
			{ before(grammarAccess.getRequireExpressionAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRequireExpressionAccess().getEnvironmentEnvironmentDeclarationIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getRequireExpressionAccess().getEnvironmentEnvironmentDeclarationCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixOperationAccess().getVariableVariableLiteralParserRuleCall_0_0()); }
		ruleVariableLiteral
		{ after(grammarAccess.getPostfixOperationAccess().getVariableVariableLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOperation__FeatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixOperationAccess().getFeatureOpPostfixParserRuleCall_1_0()); }
		ruleOpPostfix
		{ after(grammarAccess.getPostfixOperationAccess().getFeatureOpPostfixParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
		ruleOpOr
		{ after(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
		ruleOpAnd
		{ after(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
		ruleOpEquality
		{ after(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
		ruleOpCompare
		{ after(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
		ruleOpAdd
		{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
		ruleOpMulti
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
		ruleUnaryOperation
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__FeatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
		ruleOpUnary
		{ after(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperandAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_2_0()); }
		ruleUnaryOperation
		{ after(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__CastExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getCastExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getTypeTypeParserRuleCall_1_1_0()); }
		ruleType
		{ after(grammarAccess.getCastExpressionAccess().getTypeTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeFunction__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeFunctionAccess().getValueVariableDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTimeFunctionAccess().getValueVariableDeclarationIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTimeFunctionAccess().getValueVariableDeclarationIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTimeFunctionAccess().getValueVariableDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_0_1_0()); }
			'false'
			{ after(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_1_0()); }
			'true'
			{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberLiteralAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getFloatLiteralAccess().getValueFLOATTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableLiteral__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableLiteralAccess().getVariableVariableDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableLiteralAccess().getVariableVariableDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableLiteralAccess().getVariableVariableDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableLiteralAccess().getVariableVariableDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionArithmeticExpressionParserRuleCall_2_0()); }
		ruleArithmeticExpression
		{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionArithmeticExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : RULE_INT '.' RULE_INT;

RULE_NATIVE_CODE : '<<<' ( options {greedy=false;} : . )*'>>>';

RULE_ID : ('a'..'z'|'A'..'Z'|'$') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
